###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     17/Feb/2011  21:31:24 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[ #
#                    \kinetis-sc\src\cpu\start.c                              #
#    Command line =  "D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å #
#                    [\kinetis-sc\src\cpu\start.c" -D IAR -D TWR_K40X256      #
#                    -lCN "D:\Profiles\B17685\My                              #
#                    Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[\kinetis-sc\build\iar\ #
#                    pit_dma\RAM_128KB\List\" -lB "D:\Profiles\B17685\My      #
#                    Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[\kinetis-sc\build\iar\ #
#                    pit_dma\RAM_128KB\List\" -o "D:\Profiles\B17685\My       #
#                    Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[\kinetis-sc\build\iar\ #
#                    pit_dma\RAM_128KB\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0_2\arm\INC\c\DLib_Config_N #
#                    ormal.h" -I "D:\Profiles\B17685\My                       #
#                    Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[\kinetis-sc\build\iar\ #
#                    pit_dma\..\..\..\src\projects\pit_dma\" -I               #
#                    "D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å #
#                    [\kinetis-sc\build\iar\pit_dma\..\..\..\src\common\" -I  #
#                    "D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å #
#                    [\kinetis-sc\build\iar\pit_dma\..\..\..\src\cpu\" -I     #
#                    "D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å #
#                    [\kinetis-sc\build\iar\pit_dma\..\..\..\src\cpu\headers\ #
#                    " -I "D:\Profiles\B17685\My                              #
#                    Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[\kinetis-sc\build\iar\ #
#                    pit_dma\..\..\..\src\drivers\uart\" -I                   #
#                    "D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å #
#                    [\kinetis-sc\build\iar\pit_dma\..\..\..\src\drivers\mcg\ #
#                    " -I "D:\Profiles\B17685\My                              #
#                    Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[\kinetis-sc\build\iar\ #
#                    pit_dma\..\..\..\src\drivers\wdog\" -I                   #
#                    "D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å #
#                    [\kinetis-sc\build\iar\pit_dma\..\..\..\src\platforms\"  #
#                    -I "D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[ #
#                    É^Å[\kinetis-sc\build\iar\pit_dma\..\" -Ol               #
#                    --use_c++_inline                                         #
#    List file    =  D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[ #
#                    \kinetis-sc\build\iar\pit_dma\RAM_128KB\List\start.lst   #
#    Object file  =  D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[ #
#                    \kinetis-sc\build\iar\pit_dma\RAM_128KB\Obj\start.o      #
#                                                                             #
#                                                                             #
###############################################################################

D:\Profiles\B17685\My Documents\FAE\MCU\Kinetis\ÉÇÅ[É^Å[\kinetis-sc\src\cpu\start.c
      1          /*
      2           * File:	start.c
      3           * Purpose:	Kinetis start up routines. 
      4           *
      5           * Notes:		
      6           */
      7          
      8          #include "start.h"
      9          #include "common.h"
     10          #include "wdog.h"
     11          #include "sysinit.h"
     12          
     13          /********************************************************************/
     14          /*!
     15           * \brief   Kinetis Start
     16           * \return  None
     17           *
     18           * This function calls all of the needed starup routines and then 
     19           * branches to the main process.
     20           */

   \                                 In section .text, align 2, keep-with-next
     21          void start(void)
     22          { 
   \                     start:
   \   00000000   80B5               PUSH     {R7,LR}
     23          	/* Disable the watchdog timer */
     24          	wdog_disable();
   \   00000002   ........           BL       wdog_disable
     25          
     26          	/* Copy any vector or data sections that need to be in RAM */
     27          	common_startup();
   \   00000006   ........           BL       common_startup
     28          
     29          	/* Perform processor initialization */
     30          	sysinit();
   \   0000000A   ........           BL       sysinit
     31                  
     32                  printf("\n\n");
   \   0000000E   ....               ADR.N    R0,??DataTable49  ;; 0x0A, 0x0A, 0x00, 0x00
   \   00000010   ........           BL       printf
     33          	
     34          	/* Determine the last cause(s) of reset */
     35          	if (MC_SRSH & MC_SRSH_SW_MASK)
   \   00000014   ....               LDR.N    R0,??DataTable49_1  ;; 0x4007e000
   \   00000016   0078               LDRB     R0,[R0, #+0]
   \   00000018   4007               LSLS     R0,R0,#+29
   \   0000001A   03D5               BPL.N    ??start_0
     36          		printf("Software Reset\n");
   \   0000001C   ........           ADR.W    R0,`?<Constant "Software Reset\\n">`
   \   00000020   ........           BL       printf
     37          	if (MC_SRSH & MC_SRSH_LOCKUP_MASK)
   \                     ??start_0:
   \   00000024   ....               LDR.N    R0,??DataTable49_1  ;; 0x4007e000
   \   00000026   0078               LDRB     R0,[R0, #+0]
   \   00000028   8007               LSLS     R0,R0,#+30
   \   0000002A   03D5               BPL.N    ??start_1
     38          		printf("Core Lockup Event Reset\n");
   \   0000002C   ........           ADR.W    R0,`?<Constant "Core Lockup Event Reset\\n">`
   \   00000030   ........           BL       printf
     39          	if (MC_SRSH & MC_SRSH_JTAG_MASK)
   \                     ??start_1:
   \   00000034   ....               LDR.N    R0,??DataTable49_1  ;; 0x4007e000
   \   00000036   0078               LDRB     R0,[R0, #+0]
   \   00000038   C007               LSLS     R0,R0,#+31
   \   0000003A   03D5               BPL.N    ??start_2
     40          		printf("JTAG Reset\n");
   \   0000003C   ........           ADR.W    R0,`?<Constant "JTAG Reset\\n">`
   \   00000040   ........           BL       printf
     41          	
     42          	if (MC_SRSL & MC_SRSL_POR_MASK)
   \                     ??start_2:
   \   00000044   ....               LDR.N    R0,??DataTable49_2  ;; 0x4007e001
   \   00000046   0078               LDRB     R0,[R0, #+0]
   \   00000048   0006               LSLS     R0,R0,#+24
   \   0000004A   03D5               BPL.N    ??start_3
     43          		printf("Power-on Reset\n");
   \   0000004C   ........           ADR.W    R0,`?<Constant "Power-on Reset\\n">`
   \   00000050   ........           BL       printf
     44          	if (MC_SRSL & MC_SRSL_PIN_MASK)
   \                     ??start_3:
   \   00000054   ....               LDR.N    R0,??DataTable49_2  ;; 0x4007e001
   \   00000056   0078               LDRB     R0,[R0, #+0]
   \   00000058   4006               LSLS     R0,R0,#+25
   \   0000005A   03D5               BPL.N    ??start_4
     45          		printf("External Pin Reset\n");
   \   0000005C   ........           ADR.W    R0,`?<Constant "External Pin Reset\\n">`
   \   00000060   ........           BL       printf
     46          	if (MC_SRSL & MC_SRSL_COP_MASK)
   \                     ??start_4:
   \   00000064   ....               LDR.N    R0,??DataTable49_2  ;; 0x4007e001
   \   00000066   0078               LDRB     R0,[R0, #+0]
   \   00000068   8006               LSLS     R0,R0,#+26
   \   0000006A   03D5               BPL.N    ??start_5
     47          		printf("Watchdog(COP) Reset\n");
   \   0000006C   ........           ADR.W    R0,`?<Constant "Watchdog(COP) Reset\\n">`
   \   00000070   ........           BL       printf
     48          	if (MC_SRSL & MC_SRSL_LOC_MASK)
   \                     ??start_5:
   \   00000074   ....               LDR.N    R0,??DataTable49_2  ;; 0x4007e001
   \   00000076   0078               LDRB     R0,[R0, #+0]
   \   00000078   4007               LSLS     R0,R0,#+29
   \   0000007A   03D5               BPL.N    ??start_6
     49          		printf("Loss of Clock Reset\n");
   \   0000007C   ........           ADR.W    R0,`?<Constant "Loss of Clock Reset\\n">`
   \   00000080   ........           BL       printf
     50          	if (MC_SRSL & MC_SRSL_LVD_MASK)
   \                     ??start_6:
   \   00000084   ....               LDR.N    R0,??DataTable49_2  ;; 0x4007e001
   \   00000086   0078               LDRB     R0,[R0, #+0]
   \   00000088   8007               LSLS     R0,R0,#+30
   \   0000008A   03D5               BPL.N    ??start_7
     51          		printf("Low-voltage Detect Reset\n");
   \   0000008C   ........           ADR.W    R0,`?<Constant "Low-voltage Detect Re...">`
   \   00000090   ........           BL       printf
     52          	if (MC_SRSL & MC_SRSL_WAKEUP_MASK)
   \                     ??start_7:
   \   00000094   ....               LDR.N    R0,??DataTable49_2  ;; 0x4007e001
   \   00000096   0078               LDRB     R0,[R0, #+0]
   \   00000098   C007               LSLS     R0,R0,#+31
   \   0000009A   03D5               BPL.N    ??start_8
     53          		printf("LLWU Reset\n");	
   \   0000009C   ........           ADR.W    R0,`?<Constant "LLWU Reset\\n">`
   \   000000A0   ........           BL       printf
     54          	
     55          
     56          	/* Determine specific Kinetis device and revision */
     57          	cpu_indentify();
   \                     ??start_8:
   \   000000A4   ........           BL       cpu_indentify
     58          	
     59          	/* Jump to main process */
     60          	main();
   \   000000A8   ........           BL       main
     61          
     62          	/* No actions to perform after this so wait forever */
     63          	while(1);
   \                     ??start_9:
   \   000000AC   FEE7               B.N      ??start_9
     64          }
     65          /********************************************************************/
     66          /*!
     67           * \brief   Kinetis Identify
     68           * \return  None
     69           *
     70           * This is primarly a reporting function that displays information
     71           * about the specific CPU to the default terminal including:
     72           * - Kinetis family
     73           * - package
     74           * - die revision
     75           * - P-flash size
     76           * - Ram size
     77           */

   \                                 In section .text, align 2, keep-with-next
     78          void cpu_indentify (void)
     79          {
   \                     cpu_indentify:
   \   00000000   80B5               PUSH     {R7,LR}
     80              /* Determine the Kinetis family */
     81              switch((SIM_SDID & SIM_SDID_FAMID(0x7))>>SIM_SDID_FAMID_SHIFT) 
   \   00000002   ....               LDR.N    R0,??DataTable49_3  ;; 0x40048024
   \   00000004   0068               LDR      R0,[R0, #+0]
   \   00000006   0009               LSRS     R0,R0,#+4
   \   00000008   10F00700           ANDS     R0,R0,#0x7
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   06D0               BEQ.N    ??cpu_indentify_0
   \   00000010   0228               CMP      R0,#+2
   \   00000012   0ED0               BEQ.N    ??cpu_indentify_1
   \   00000014   08D3               BCC.N    ??cpu_indentify_2
   \   00000016   0428               CMP      R0,#+4
   \   00000018   15D0               BEQ.N    ??cpu_indentify_3
   \   0000001A   0FD3               BCC.N    ??cpu_indentify_4
   \   0000001C   18E0               B.N      ??cpu_indentify_5
     82              {  
     83              	case 0x0:
     84              		printf("\nK10-");
   \                     ??cpu_indentify_0:
   \   0000001E   ........           ADR.W    R0,`?<Constant "\\nK10-">`
   \   00000022   ........           BL       printf
     85              		break;
   \   00000026   17E0               B.N      ??cpu_indentify_6
     86              	case 0x1:
     87              		printf("\nK20-");
   \                     ??cpu_indentify_2:
   \   00000028   ........           ADR.W    R0,`?<Constant "\\nK20-">`
   \   0000002C   ........           BL       printf
     88              		break;
   \   00000030   12E0               B.N      ??cpu_indentify_6
     89              	case 0x2:
     90              		printf("\nK30-");
   \                     ??cpu_indentify_1:
   \   00000032   ........           ADR.W    R0,`?<Constant "\\nK30-">`
   \   00000036   ........           BL       printf
     91              		break;
   \   0000003A   0DE0               B.N      ??cpu_indentify_6
     92              	case 0x3:
     93              		printf("\nK40-");
   \                     ??cpu_indentify_4:
   \   0000003C   ........           ADR.W    R0,`?<Constant "\\nK40-">`
   \   00000040   ........           BL       printf
     94              		break;
   \   00000044   08E0               B.N      ??cpu_indentify_6
     95              	case 0x4:
     96              		printf("\nK60-");
   \                     ??cpu_indentify_3:
   \   00000046   ........           ADR.W    R0,`?<Constant "\\nK60-">`
   \   0000004A   ........           BL       printf
     97              		break;
   \   0000004E   03E0               B.N      ??cpu_indentify_6
     98          	default:
     99          		printf("\nUnrecognized Kinetis family device.\n");  
   \                     ??cpu_indentify_5:
   \   00000050   ........           ADR.W    R0,`?<Constant "\\nUnrecognized Kinetis...">`
   \   00000054   ........           BL       printf
    100          		break;  	
    101              }
    102          
    103              /* Determine the package size */
    104              switch((SIM_SDID & SIM_SDID_PINID(0xF))>>SIM_SDID_PINID_SHIFT) 
   \                     ??cpu_indentify_6:
   \   00000058   ....               LDR.N    R0,??DataTable49_3  ;; 0x40048024
   \   0000005A   0068               LDR      R0,[R0, #+0]
   \   0000005C   10F00F00           ANDS     R0,R0,#0xF
   \   00000060   0228               CMP      R0,#+2
   \   00000062   12D0               BEQ.N    ??cpu_indentify_7
   \   00000064   0428               CMP      R0,#+4
   \   00000066   15D0               BEQ.N    ??cpu_indentify_8
   \   00000068   0528               CMP      R0,#+5
   \   0000006A   18D0               BEQ.N    ??cpu_indentify_9
   \   0000006C   0628               CMP      R0,#+6
   \   0000006E   1BD0               BEQ.N    ??cpu_indentify_10
   \   00000070   0728               CMP      R0,#+7
   \   00000072   1ED0               BEQ.N    ??cpu_indentify_11
   \   00000074   0828               CMP      R0,#+8
   \   00000076   21D0               BEQ.N    ??cpu_indentify_12
   \   00000078   0928               CMP      R0,#+9
   \   0000007A   24D0               BEQ.N    ??cpu_indentify_13
   \   0000007C   0A28               CMP      R0,#+10
   \   0000007E   27D0               BEQ.N    ??cpu_indentify_14
   \   00000080   0C28               CMP      R0,#+12
   \   00000082   2AD0               BEQ.N    ??cpu_indentify_15
   \   00000084   0E28               CMP      R0,#+14
   \   00000086   2DD0               BEQ.N    ??cpu_indentify_16
   \   00000088   31E0               B.N      ??cpu_indentify_17
    105              {  
    106              	case 0x2:
    107              		printf("32pin\n");
   \                     ??cpu_indentify_7:
   \   0000008A   ........           ADR.W    R0,`?<Constant "32pin\\n">`
   \   0000008E   ........           BL       printf
    108              		break;
   \   00000092   30E0               B.N      ??cpu_indentify_18
    109              	case 0x4:
    110              		printf("48pin\n");
   \                     ??cpu_indentify_8:
   \   00000094   ........           ADR.W    R0,`?<Constant "48pin\\n">`
   \   00000098   ........           BL       printf
    111              		break;
   \   0000009C   2BE0               B.N      ??cpu_indentify_18
    112              	case 0x5:
    113              		printf("64pin\n");
   \                     ??cpu_indentify_9:
   \   0000009E   ........           ADR.W    R0,`?<Constant "64pin\\n">`
   \   000000A2   ........           BL       printf
    114              		break;
   \   000000A6   26E0               B.N      ??cpu_indentify_18
    115              	case 0x6:
    116              		printf("80pin\n");
   \                     ??cpu_indentify_10:
   \   000000A8   ........           ADR.W    R0,`?<Constant "80pin\\n">`
   \   000000AC   ........           BL       printf
    117              		break;
   \   000000B0   21E0               B.N      ??cpu_indentify_18
    118              	case 0x7:
    119              		printf("81pin\n");
   \                     ??cpu_indentify_11:
   \   000000B2   ........           ADR.W    R0,`?<Constant "81pin\\n">`
   \   000000B6   ........           BL       printf
    120              		break;
   \   000000BA   1CE0               B.N      ??cpu_indentify_18
    121              	case 0x8:
    122              		printf("100pin\n");
   \                     ??cpu_indentify_12:
   \   000000BC   ........           ADR.W    R0,`?<Constant "100pin\\n">`
   \   000000C0   ........           BL       printf
    123              		break;
   \   000000C4   17E0               B.N      ??cpu_indentify_18
    124              	case 0x9:
    125              		printf("104pin\n");
   \                     ??cpu_indentify_13:
   \   000000C6   ........           ADR.W    R0,`?<Constant "104pin\\n">`
   \   000000CA   ........           BL       printf
    126              		break;
   \   000000CE   12E0               B.N      ??cpu_indentify_18
    127              	case 0xA:
    128              		printf("144pin\n");
   \                     ??cpu_indentify_14:
   \   000000D0   ........           ADR.W    R0,`?<Constant "144pin\\n">`
   \   000000D4   ........           BL       printf
    129              		break;
   \   000000D8   0DE0               B.N      ??cpu_indentify_18
    130              	case 0xC:
    131              		printf("196pin\n");
   \                     ??cpu_indentify_15:
   \   000000DA   ........           ADR.W    R0,`?<Constant "196pin\\n">`
   \   000000DE   ........           BL       printf
    132              		break;
   \   000000E2   08E0               B.N      ??cpu_indentify_18
    133              	case 0xE:
    134              		printf("256pin\n");
   \                     ??cpu_indentify_16:
   \   000000E4   ........           ADR.W    R0,`?<Constant "256pin\\n">`
   \   000000E8   ........           BL       printf
    135              		break;
   \   000000EC   03E0               B.N      ??cpu_indentify_18
    136          	default:
    137          		printf("\nUnrecognized Kinetis package code.\n");  
   \                     ??cpu_indentify_17:
   \   000000EE   ........           ADR.W    R0,`?<Constant "\\nUnrecognized Kinetis...">_1`
   \   000000F2   ........           BL       printf
    138          		break;  	
    139              }                
    140          
    141              /* Determine the revision ID */
    142              printf("rev %d\n", SIM_SDID & SIM_SDID_REVID(0xF));
   \                     ??cpu_indentify_18:
   \   000000F6   ....               LDR.N    R0,??DataTable49_3  ;; 0x40048024
   \   000000F8   0068               LDR      R0,[R0, #+0]
   \   000000FA   10F47041           ANDS     R1,R0,#0xF000
   \   000000FE   ........           ADR.W    R0,`?<Constant "rev %d\\n">`
   \   00000102   ........           BL       printf
    143              
    144              /* Determine the P-flash size */
    145              switch((SIM_FCFG1 & SIM_FCFG1_FSIZE(0xFF))>>SIM_FCFG1_FSIZE_SHIFT)
   \   00000106   ....               LDR.N    R0,??DataTable49_4  ;; 0x4004804c
   \   00000108   0068               LDR      R0,[R0, #+0]
   \   0000010A   000E               LSRS     R0,R0,#+24
   \   0000010C   0028               CMP      R0,#+0
   \   0000010E   1AD0               BEQ.N    ??cpu_indentify_19
   \   00000110   0128               CMP      R0,#+1
   \   00000112   1DD0               BEQ.N    ??cpu_indentify_20
   \   00000114   0228               CMP      R0,#+2
   \   00000116   20D0               BEQ.N    ??cpu_indentify_21
   \   00000118   0328               CMP      R0,#+3
   \   0000011A   23D0               BEQ.N    ??cpu_indentify_22
   \   0000011C   0428               CMP      R0,#+4
   \   0000011E   26D0               BEQ.N    ??cpu_indentify_23
   \   00000120   0528               CMP      R0,#+5
   \   00000122   29D0               BEQ.N    ??cpu_indentify_24
   \   00000124   0628               CMP      R0,#+6
   \   00000126   2CD0               BEQ.N    ??cpu_indentify_25
   \   00000128   0728               CMP      R0,#+7
   \   0000012A   2FD0               BEQ.N    ??cpu_indentify_26
   \   0000012C   0828               CMP      R0,#+8
   \   0000012E   32D0               BEQ.N    ??cpu_indentify_27
   \   00000130   0928               CMP      R0,#+9
   \   00000132   35D0               BEQ.N    ??cpu_indentify_28
   \   00000134   0A28               CMP      R0,#+10
   \   00000136   38D0               BEQ.N    ??cpu_indentify_29
   \   00000138   0B28               CMP      R0,#+11
   \   0000013A   3BD0               BEQ.N    ??cpu_indentify_30
   \   0000013C   0C28               CMP      R0,#+12
   \   0000013E   3ED0               BEQ.N    ??cpu_indentify_31
   \   00000140   FF28               CMP      R0,#+255
   \   00000142   41D0               BEQ.N    ??cpu_indentify_32
   \   00000144   45E0               B.N      ??cpu_indentify_33
    146              {
    147              	case 0x0:
    148              		printf("12 kBytes of P-flash	");
   \                     ??cpu_indentify_19:
   \   00000146   ........           ADR.W    R0,`?<Constant "12 kBytes of P-flash\\t">`
   \   0000014A   ........           BL       printf
    149              		break;
   \   0000014E   44E0               B.N      ??cpu_indentify_34
    150              	case 0x1:
    151              		printf("16 kBytes of P-flash	");
   \                     ??cpu_indentify_20:
   \   00000150   ........           ADR.W    R0,`?<Constant "16 kBytes of P-flash\\t">`
   \   00000154   ........           BL       printf
    152              		break;
   \   00000158   3FE0               B.N      ??cpu_indentify_34
    153              	case 0x2:
    154              		printf("32 kBytes of P-flash	");
   \                     ??cpu_indentify_21:
   \   0000015A   ........           ADR.W    R0,`?<Constant "32 kBytes of P-flash\\t">`
   \   0000015E   ........           BL       printf
    155              		break;
   \   00000162   3AE0               B.N      ??cpu_indentify_34
    156              	case 0x3:
    157              		printf("48 kBytes of P-flash	");
   \                     ??cpu_indentify_22:
   \   00000164   ........           ADR.W    R0,`?<Constant "48 kBytes of P-flash\\t">`
   \   00000168   ........           BL       printf
    158              		break;
   \   0000016C   35E0               B.N      ??cpu_indentify_34
    159              	case 0x4:
    160              		printf("64 kBytes of P-flash	");
   \                     ??cpu_indentify_23:
   \   0000016E   ........           ADR.W    R0,`?<Constant "64 kBytes of P-flash\\t">`
   \   00000172   ........           BL       printf
    161              		break;
   \   00000176   30E0               B.N      ??cpu_indentify_34
    162              	case 0x5:
    163              		printf("96 kBytes of P-flash	");
   \                     ??cpu_indentify_24:
   \   00000178   ........           ADR.W    R0,`?<Constant "96 kBytes of P-flash\\t">`
   \   0000017C   ........           BL       printf
    164              		break;
   \   00000180   2BE0               B.N      ??cpu_indentify_34
    165              	case 0x6:
    166              		printf("128 kBytes of P-flash	");
   \                     ??cpu_indentify_25:
   \   00000182   ........           ADR.W    R0,`?<Constant "128 kBytes of P-flash\\t">`
   \   00000186   ........           BL       printf
    167              		break;
   \   0000018A   26E0               B.N      ??cpu_indentify_34
    168              	case 0x7:
    169              		printf("192 kBytes of P-flash	");
   \                     ??cpu_indentify_26:
   \   0000018C   ........           ADR.W    R0,`?<Constant "192 kBytes of P-flash\\t">`
   \   00000190   ........           BL       printf
    170              		break;
   \   00000194   21E0               B.N      ??cpu_indentify_34
    171              	case 0x8:
    172              		printf("256 kBytes of P-flash	");
   \                     ??cpu_indentify_27:
   \   00000196   ........           ADR.W    R0,`?<Constant "256 kBytes of P-flash\\t">`
   \   0000019A   ........           BL       printf
    173              		break;
   \   0000019E   1CE0               B.N      ??cpu_indentify_34
    174              	case 0x9:
    175              		printf("320 kBytes of P-flash	");
   \                     ??cpu_indentify_28:
   \   000001A0   ........           ADR.W    R0,`?<Constant "320 kBytes of P-flash\\t">`
   \   000001A4   ........           BL       printf
    176              		break;
   \   000001A8   17E0               B.N      ??cpu_indentify_34
    177              	case 0xA:
    178              		printf("384 kBytes of P-flash	");
   \                     ??cpu_indentify_29:
   \   000001AA   ........           ADR.W    R0,`?<Constant "384 kBytes of P-flash\\t">`
   \   000001AE   ........           BL       printf
    179              		break;
   \   000001B2   12E0               B.N      ??cpu_indentify_34
    180              	case 0xB:
    181              		printf("448 kBytes of P-flash	");
   \                     ??cpu_indentify_30:
   \   000001B4   ........           ADR.W    R0,`?<Constant "448 kBytes of P-flash\\t">`
   \   000001B8   ........           BL       printf
    182              		break;
   \   000001BC   0DE0               B.N      ??cpu_indentify_34
    183              	case 0xC:
    184              		printf("512 kBytes of P-flash	");
   \                     ??cpu_indentify_31:
   \   000001BE   ........           ADR.W    R0,`?<Constant "512 kBytes of P-flash\\t">`
   \   000001C2   ........           BL       printf
    185              		break;
   \   000001C6   08E0               B.N      ??cpu_indentify_34
    186              	case 0xFF:
    187              		printf("Full size P-flash	");
   \                     ??cpu_indentify_32:
   \   000001C8   ........           ADR.W    R0,`?<Constant "Full size P-flash\\t">`
   \   000001CC   ........           BL       printf
    188              		break;
   \   000001D0   03E0               B.N      ??cpu_indentify_34
    189          		default:
    190          			printf("ERR!! Undefined P-flash size\n");  
   \                     ??cpu_indentify_33:
   \   000001D2   ........           ADR.W    R0,`?<Constant "ERR!! Undefined P-fla...">`
   \   000001D6   ........           BL       printf
    191          			break;  		
    192              }
    193          
    194              /* Determine the RAM size */
    195              switch((SIM_SOPT1 & SIM_SOPT1_RAMSIZE(0xF))>>SIM_SOPT1_RAMSIZE_SHIFT)
   \                     ??cpu_indentify_34:
   \   000001DA   ....               LDR.N    R0,??DataTable49_5  ;; 0x40047000
   \   000001DC   0068               LDR      R0,[R0, #+0]
   \   000001DE   000B               LSRS     R0,R0,#+12
   \   000001E0   10F00F00           ANDS     R0,R0,#0xF
   \   000001E4   0528               CMP      R0,#+5
   \   000001E6   06D0               BEQ.N    ??cpu_indentify_35
   \   000001E8   0728               CMP      R0,#+7
   \   000001EA   09D0               BEQ.N    ??cpu_indentify_36
   \   000001EC   0828               CMP      R0,#+8
   \   000001EE   0CD0               BEQ.N    ??cpu_indentify_37
   \   000001F0   0928               CMP      R0,#+9
   \   000001F2   0FD0               BEQ.N    ??cpu_indentify_38
   \   000001F4   13E0               B.N      ??cpu_indentify_39
    196              {
    197              	case 0x5:
    198              		printf(" 32 kBytes of RAM\n\n");
   \                     ??cpu_indentify_35:
   \   000001F6   ........           ADR.W    R0,`?<Constant " 32 kBytes of RAM\\n\\n">`
   \   000001FA   ........           BL       printf
    199              		break;
   \   000001FE   12E0               B.N      ??cpu_indentify_40
    200              	case 0x7:
    201              		printf(" 64 kBytes of RAM\n\n");
   \                     ??cpu_indentify_36:
   \   00000200   ........           ADR.W    R0,`?<Constant " 64 kBytes of RAM\\n\\n">`
   \   00000204   ........           BL       printf
    202              		break;
   \   00000208   0DE0               B.N      ??cpu_indentify_40
    203              	case 0x8:
    204              		printf(" 96 kBytes of RAM\n\n");
   \                     ??cpu_indentify_37:
   \   0000020A   ........           ADR.W    R0,`?<Constant " 96 kBytes of RAM\\n\\n">`
   \   0000020E   ........           BL       printf
    205              		break;
   \   00000212   08E0               B.N      ??cpu_indentify_40
    206              	case 0x9:
    207              		printf(" 128 kBytes of RAM\n\n");
   \                     ??cpu_indentify_38:
   \   00000214   ........           ADR.W    R0,`?<Constant " 128 kBytes of RAM\\n\\n">`
   \   00000218   ........           BL       printf
    208              		break;
   \   0000021C   03E0               B.N      ??cpu_indentify_40
    209          		default:
    210          			printf(" ERR!! Undefined RAM size\n\n");  
   \                     ??cpu_indentify_39:
   \   0000021E   ........           ADR.W    R0,`?<Constant " ERR!! Undefined RAM ...">`
   \   00000222   ........           BL       printf
    211          			break;  		
    212              }
    213          }
   \                     ??cpu_indentify_40:
   \   00000226   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49:
   \   00000000   0A0A0000           DC8      0x0A, 0x0A, 0x00, 0x00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_1:
   \   00000000   00E00740           DC32     0x4007e000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_2:
   \   00000000   01E00740           DC32     0x4007e001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_3:
   \   00000000   24800440           DC32     0x40048024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_4:
   \   00000000   4C800440           DC32     0x4004804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable49_5:
   \   00000000   00700440           DC32     0x40047000

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\n\\n">`:
   \   00000000                      ; Initializer data, 4 bytes
   \   00000000   0A0A0000           DC8 10, 10, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Software Reset\\n">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   536F66747761       DC8 83, 111, 102, 116, 119, 97, 114, 101, 32, 82
   \              72652052    
   \   0000000A   657365740A00       DC8 101, 115, 101, 116, 10, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Core Lockup Event Reset\\n">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   436F7265204C       DC8 67, 111, 114, 101, 32, 76, 111, 99, 107, 117
   \              6F636B75    
   \   0000000A   70204576656E       DC8 112, 32, 69, 118, 101, 110, 116, 32, 82, 101
   \              74205265    
   \   00000014   7365740A0000       DC8 115, 101, 116, 10, 0, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "JTAG Reset\\n">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4A5441472052       DC8 74, 84, 65, 71, 32, 82, 101, 115, 101, 116
   \              65736574    
   \   0000000A   0A00               DC8 10, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Power-on Reset\\n">`:
   \   00000000                      ; Initializer data, 16 bytes
   \   00000000   506F7765722D       DC8 80, 111, 119, 101, 114, 45, 111, 110, 32, 82
   \              6F6E2052    
   \   0000000A   657365740A00       DC8 101, 115, 101, 116, 10, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "External Pin Reset\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   45787465726E       DC8 69, 120, 116, 101, 114, 110, 97, 108, 32, 80
   \              616C2050    
   \   0000000A   696E20526573       DC8 105, 110, 32, 82, 101, 115, 101, 116, 10, 0
   \              65740A00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Watchdog(COP) Reset\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   576174636864       DC8 87, 97, 116, 99, 104, 100, 111, 103, 40, 67
   \              6F672843    
   \   0000000A   4F5029205265       DC8 79, 80, 41, 32, 82, 101, 115, 101, 116, 10
   \              7365740A    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Loss of Clock Reset\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   4C6F7373206F       DC8 76, 111, 115, 115, 32, 111, 102, 32, 67, 108
   \              6620436C    
   \   0000000A   6F636B205265       DC8 111, 99, 107, 32, 82, 101, 115, 101, 116, 10
   \              7365740A    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Low-voltage Detect Re...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   4C6F772D766F       DC8 76, 111, 119, 45, 118, 111, 108, 116, 97, 103
   \              6C746167    
   \   0000000A   652044657465       DC8 101, 32, 68, 101, 116, 101, 99, 116, 32, 82
   \              63742052    
   \   00000014   657365740A00       DC8 101, 115, 101, 116, 10, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "LLWU Reset\\n">`:
   \   00000000                      ; Initializer data, 12 bytes
   \   00000000   4C4C57552052       DC8 76, 76, 87, 85, 32, 82, 101, 115, 101, 116
   \              65736574    
   \   0000000A   0A00               DC8 10, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nK10-">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   0A4B31302D00       DC8 10, 75, 49, 48, 45, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nK20-">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   0A4B32302D00       DC8 10, 75, 50, 48, 45, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nK30-">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   0A4B33302D00       DC8 10, 75, 51, 48, 45, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nK40-">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   0A4B34302D00       DC8 10, 75, 52, 48, 45, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nK60-">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   0A4B36302D00       DC8 10, 75, 54, 48, 45, 0, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nUnrecognized Kinetis...">`:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   0A556E726563       DC8 10, 85, 110, 114, 101, 99, 111, 103, 110, 105
   \              6F676E69    
   \   0000000A   7A6564204B69       DC8 122, 101, 100, 32, 75, 105, 110, 101, 116, 105
   \              6E657469    
   \   00000014   732066616D69       DC8 115, 32, 102, 97, 109, 105, 108, 121, 32, 100
   \              6C792064    
   \   0000001E   65766963652E       DC8 101, 118, 105, 99, 101, 46, 10, 0, 0, 0
   \              0A000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "32pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   333270696E0A       DC8 51, 50, 112, 105, 110, 10, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "48pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   343870696E0A       DC8 52, 56, 112, 105, 110, 10, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "64pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   363470696E0A       DC8 54, 52, 112, 105, 110, 10, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "80pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   383070696E0A       DC8 56, 48, 112, 105, 110, 10, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "81pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   383170696E0A       DC8 56, 49, 112, 105, 110, 10, 0, 0
   \              0000        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "100pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   31303070696E       DC8 49, 48, 48, 112, 105, 110, 10, 0
   \              0A00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "104pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   31303470696E       DC8 49, 48, 52, 112, 105, 110, 10, 0
   \              0A00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "144pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   31343470696E       DC8 49, 52, 52, 112, 105, 110, 10, 0
   \              0A00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "196pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   31393670696E       DC8 49, 57, 54, 112, 105, 110, 10, 0
   \              0A00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "256pin\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   32353670696E       DC8 50, 53, 54, 112, 105, 110, 10, 0
   \              0A00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "\\nUnrecognized Kinetis...">_1`:
   \   00000000                      ; Initializer data, 40 bytes
   \   00000000   0A556E726563       DC8 10, 85, 110, 114, 101, 99, 111, 103, 110, 105
   \              6F676E69    
   \   0000000A   7A6564204B69       DC8 122, 101, 100, 32, 75, 105, 110, 101, 116, 105
   \              6E657469    
   \   00000014   73207061636B       DC8 115, 32, 112, 97, 99, 107, 97, 103, 101, 32
   \              61676520    
   \   0000001E   636F64652E0A       DC8 99, 111, 100, 101, 46, 10, 0, 0, 0, 0
   \              00000000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "rev %d\\n">`:
   \   00000000                      ; Initializer data, 8 bytes
   \   00000000   726576202564       DC8 114, 101, 118, 32, 37, 100, 10, 0
   \              0A00        

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "12 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3132206B4279       DC8 49, 50, 32, 107, 66, 121, 116, 101, 115, 32
   \              74657320    
   \   0000000A   6F6620502D66       DC8 111, 102, 32, 80, 45, 102, 108, 97, 115, 104
   \              6C617368    
   \   00000014   09000000           DC8 9, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "16 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3136206B4279       DC8 49, 54, 32, 107, 66, 121, 116, 101, 115, 32
   \              74657320    
   \   0000000A   6F6620502D66       DC8 111, 102, 32, 80, 45, 102, 108, 97, 115, 104
   \              6C617368    
   \   00000014   09000000           DC8 9, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "32 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3332206B4279       DC8 51, 50, 32, 107, 66, 121, 116, 101, 115, 32
   \              74657320    
   \   0000000A   6F6620502D66       DC8 111, 102, 32, 80, 45, 102, 108, 97, 115, 104
   \              6C617368    
   \   00000014   09000000           DC8 9, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "48 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3438206B4279       DC8 52, 56, 32, 107, 66, 121, 116, 101, 115, 32
   \              74657320    
   \   0000000A   6F6620502D66       DC8 111, 102, 32, 80, 45, 102, 108, 97, 115, 104
   \              6C617368    
   \   00000014   09000000           DC8 9, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "64 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3634206B4279       DC8 54, 52, 32, 107, 66, 121, 116, 101, 115, 32
   \              74657320    
   \   0000000A   6F6620502D66       DC8 111, 102, 32, 80, 45, 102, 108, 97, 115, 104
   \              6C617368    
   \   00000014   09000000           DC8 9, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "96 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   3936206B4279       DC8 57, 54, 32, 107, 66, 121, 116, 101, 115, 32
   \              74657320    
   \   0000000A   6F6620502D66       DC8 111, 102, 32, 80, 45, 102, 108, 97, 115, 104
   \              6C617368    
   \   00000014   09000000           DC8 9, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "128 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   313238206B42       DC8 49, 50, 56, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F6620502D       DC8 32, 111, 102, 32, 80, 45, 102, 108, 97, 115
   \              666C6173    
   \   00000014   68090000           DC8 104, 9, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "192 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   313932206B42       DC8 49, 57, 50, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F6620502D       DC8 32, 111, 102, 32, 80, 45, 102, 108, 97, 115
   \              666C6173    
   \   00000014   68090000           DC8 104, 9, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "256 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   323536206B42       DC8 50, 53, 54, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F6620502D       DC8 32, 111, 102, 32, 80, 45, 102, 108, 97, 115
   \              666C6173    
   \   00000014   68090000           DC8 104, 9, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "320 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   333230206B42       DC8 51, 50, 48, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F6620502D       DC8 32, 111, 102, 32, 80, 45, 102, 108, 97, 115
   \              666C6173    
   \   00000014   68090000           DC8 104, 9, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "384 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   333834206B42       DC8 51, 56, 52, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F6620502D       DC8 32, 111, 102, 32, 80, 45, 102, 108, 97, 115
   \              666C6173    
   \   00000014   68090000           DC8 104, 9, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "448 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   343438206B42       DC8 52, 52, 56, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F6620502D       DC8 32, 111, 102, 32, 80, 45, 102, 108, 97, 115
   \              666C6173    
   \   00000014   68090000           DC8 104, 9, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "512 kBytes of P-flash\\t">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   353132206B42       DC8 53, 49, 50, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F6620502D       DC8 32, 111, 102, 32, 80, 45, 102, 108, 97, 115
   \              666C6173    
   \   00000014   68090000           DC8 104, 9, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "Full size P-flash\\t">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   46756C6C2073       DC8 70, 117, 108, 108, 32, 115, 105, 122, 101, 32
   \              697A6520    
   \   0000000A   502D666C6173       DC8 80, 45, 102, 108, 97, 115, 104, 9, 0, 0
   \              68090000    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant "ERR!! Undefined P-fla...">`:
   \   00000000                      ; Initializer data, 32 bytes
   \   00000000   455252212120       DC8 69, 82, 82, 33, 33, 32, 85, 110, 100, 101
   \              556E6465    
   \   0000000A   66696E656420       DC8 102, 105, 110, 101, 100, 32, 80, 45, 102, 108
   \              502D666C    
   \   00000014   617368207369       DC8 97, 115, 104, 32, 115, 105, 122, 101, 10, 0
   \              7A650A00    
   \   0000001E   0000               DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 32 kBytes of RAM\\n\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   203332206B42       DC8 32, 51, 50, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F66205241       DC8 32, 111, 102, 32, 82, 65, 77, 10, 10, 0
   \              4D0A0A00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 64 kBytes of RAM\\n\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   203634206B42       DC8 32, 54, 52, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F66205241       DC8 32, 111, 102, 32, 82, 65, 77, 10, 10, 0
   \              4D0A0A00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 96 kBytes of RAM\\n\\n">`:
   \   00000000                      ; Initializer data, 20 bytes
   \   00000000   203936206B42       DC8 32, 57, 54, 32, 107, 66, 121, 116, 101, 115
   \              79746573    
   \   0000000A   206F66205241       DC8 32, 111, 102, 32, 82, 65, 77, 10, 10, 0
   \              4D0A0A00    

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " 128 kBytes of RAM\\n\\n">`:
   \   00000000                      ; Initializer data, 24 bytes
   \   00000000   20313238206B       DC8 32, 49, 50, 56, 32, 107, 66, 121, 116, 101
   \              42797465    
   \   0000000A   73206F662052       DC8 115, 32, 111, 102, 32, 82, 65, 77, 10, 10
   \              414D0A0A    
   \   00000014   00000000           DC8 0, 0, 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     `?<Constant " ERR!! Undefined RAM ...">`:
   \   00000000                      ; Initializer data, 28 bytes
   \   00000000   204552522121       DC8 32, 69, 82, 82, 33, 33, 32, 85, 110, 100
   \              20556E64    
   \   0000000A   6566696E6564       DC8 101, 102, 105, 110, 101, 100, 32, 82, 65, 77
   \              2052414D    
   \   00000014   2073697A650A       DC8 32, 115, 105, 122, 101, 10, 10, 0
   \              0A00        
    214          /********************************************************************/
    215          

   Maximum stack usage in bytes:

     Function      .cstack
     --------      -------
     cpu_indentify      8
     start              8


   Section sizes:

     Function/Label                            Bytes
     --------------                            -----
     start                                      174
     cpu_indentify                              552
     ??DataTable49                                4
     ??DataTable49_1                              4
     ??DataTable49_2                              4
     ??DataTable49_3                              4
     ??DataTable49_4                              4
     ??DataTable49_5                              4
     ?<Constant "\n\n">                           4
     ?<Constant "Software Reset\n">              16
     ?<Constant "Core Lockup Event Reset\n">     28
     ?<Constant "JTAG Reset\n">                  12
     ?<Constant "Power-on Reset\n">              16
     ?<Constant "External Pin Reset\n">          20
     ?<Constant "Watchdog(COP) Reset\n">         24
     ?<Constant "Loss of Clock Reset\n">         24
     ?<Constant "Low-voltage Detect Re...">      28
     ?<Constant "LLWU Reset\n">                  12
     ?<Constant "\nK10-">                         8
     ?<Constant "\nK20-">                         8
     ?<Constant "\nK30-">                         8
     ?<Constant "\nK40-">                         8
     ?<Constant "\nK60-">                         8
     ?<Constant "\nUnrecognized Kinetis...">     40
     ?<Constant "32pin\n">                        8
     ?<Constant "48pin\n">                        8
     ?<Constant "64pin\n">                        8
     ?<Constant "80pin\n">                        8
     ?<Constant "81pin\n">                        8
     ?<Constant "100pin\n">                       8
     ?<Constant "104pin\n">                       8
     ?<Constant "144pin\n">                       8
     ?<Constant "196pin\n">                       8
     ?<Constant "256pin\n">                       8
     ?<Constant "\nUnrecognized Kinetis...">_1   40
     ?<Constant "rev %d\n">                       8
     ?<Constant "12 kBytes of P-flash\t">        24
     ?<Constant "16 kBytes of P-flash\t">        24
     ?<Constant "32 kBytes of P-flash\t">        24
     ?<Constant "48 kBytes of P-flash\t">        24
     ?<Constant "64 kBytes of P-flash\t">        24
     ?<Constant "96 kBytes of P-flash\t">        24
     ?<Constant "128 kBytes of P-flash\t">       24
     ?<Constant "192 kBytes of P-flash\t">       24
     ?<Constant "256 kBytes of P-flash\t">       24
     ?<Constant "320 kBytes of P-flash\t">       24
     ?<Constant "384 kBytes of P-flash\t">       24
     ?<Constant "448 kBytes of P-flash\t">       24
     ?<Constant "512 kBytes of P-flash\t">       24
     ?<Constant "Full size P-flash\t">           20
     ?<Constant "ERR!! Undefined P-fla...">      32
     ?<Constant " 32 kBytes of RAM\n\n">         20
     ?<Constant " 64 kBytes of RAM\n\n">         20
     ?<Constant " 96 kBytes of RAM\n\n">         20
     ?<Constant " 128 kBytes of RAM\n\n">        24
     ?<Constant " ERR!! Undefined RAM ...">      28

 
 1 618 bytes in section .text
 
 1 618 bytes of CODE memory

Errors: none
Warnings: none
