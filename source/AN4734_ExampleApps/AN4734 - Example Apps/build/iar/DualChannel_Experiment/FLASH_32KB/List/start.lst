###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.3.54009/W32 for ARM     18/Feb/2013  16:57:31 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\Profiles\B38350\My Documents\App Notes\Kinetis\L      #
#                    Series\CMP pin sampling\Example Projects\src\cpu\start.c #
#    Command line =  "D:\Profiles\B38350\My Documents\App Notes\Kinetis\L     #
#                    Series\CMP pin sampling\Example                          #
#                    Projects\src\cpu\start.c" -D IAR -D FRDM -D EX2 -lCN     #
#                    "D:\Profiles\B38350\My Documents\App Notes\Kinetis\L     #
#                    Series\CMP pin sampling\Example                          #
#                    Projects\build\iar\DualChannel_Experiment\FLASH_32KB\Lis #
#                    t\" -lB "D:\Profiles\B38350\My Documents\App             #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\FLASH_32KB\Lis #
#                    t\" -o "D:\Profiles\B38350\My Documents\App              #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\FLASH_32KB\Obj #
#                    \" --no_cse --no_unroll --no_inline --no_code_motion     #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M0+ -e --fpu=None           #
#                    --dlib_config "C:\Program Files\IAR Systems\Embedded     #
#                    Workbench 6.4\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    "D:\Profiles\B38350\My Documents\App Notes\Kinetis\L     #
#                    Series\CMP pin sampling\Example                          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\p #
#                    rojects\DualChannel_Experiment\" -I                      #
#                    "D:\Profiles\B38350\My Documents\App Notes\Kinetis\L     #
#                    Series\CMP pin sampling\Example                          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\c #
#                    ommon\" -I "D:\Profiles\B38350\My Documents\App          #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\c #
#                    pu\" -I "D:\Profiles\B38350\My Documents\App             #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\c #
#                    pu\headers\" -I "D:\Profiles\B38350\My Documents\App     #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\llwu\" -I "D:\Profiles\B38350\My Documents\App    #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\adc\" -I "D:\Profiles\B38350\My Documents\App     #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\lptmr\" -I "D:\Profiles\B38350\My Documents\App   #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\mcg\" -I "D:\Profiles\B38350\My Documents\App     #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\pmc\" -I "D:\Profiles\B38350\My Documents\App     #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\rcm\" -I "D:\Profiles\B38350\My Documents\App     #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\rtc\" -I "D:\Profiles\B38350\My Documents\App     #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\smc\" -I "D:\Profiles\B38350\My Documents\App     #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\uart\" -I "D:\Profiles\B38350\My Documents\App    #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\wdog\" -I "D:\Profiles\B38350\My Documents\App    #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\d #
#                    rivers\uart\" -I "D:\Profiles\B38350\My Documents\App    #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\..\..\src\p #
#                    latforms\" -I "D:\Profiles\B38350\My Documents\App       #
#                    Notes\Kinetis\L Series\CMP pin sampling\Example          #
#                    Projects\build\iar\DualChannel_Experiment\..\" -Ol       #
#                    --use_c++_inline                                         #
#    List file    =  D:\Profiles\B38350\My Documents\App Notes\Kinetis\L      #
#                    Series\CMP pin sampling\Example                          #
#                    Projects\build\iar\DualChannel_Experiment\FLASH_32KB\Lis #
#                    t\start.lst                                              #
#    Object file  =  D:\Profiles\B38350\My Documents\App Notes\Kinetis\L      #
#                    Series\CMP pin sampling\Example                          #
#                    Projects\build\iar\DualChannel_Experiment\FLASH_32KB\Obj #
#                    \start.o                                                 #
#                                                                             #
#                                                                             #
###############################################################################

D:\Profiles\B38350\My Documents\App Notes\Kinetis\L Series\CMP pin sampling\Example Projects\src\cpu\start.c
      1          /*
      2           * File:	start.c
      3           * Purpose:	Kinetis start up routines. 
      4           *
      5           * Notes:		
      6           */
      7          
      8          #include "start.h"
      9          #include "common.h"
     10          #include "wdog.h"
     11          #include "sysinit.h"
     12          #include "rcm.h"
     13          #include "adc.h"
     14          
     15          /********************************************************************/
     16          /*!
     17           * \brief   Kinetis Start
     18           * \return  None
     19           *
     20           * This function calls all of the needed starup routines and then 
     21           * branches to the main process.
     22           */

   \                                 In section .text, align 2, keep-with-next
     23          void start(void)
     24          { 
     25              // If the project is targeting the KL04 reference design, don't perform
     26              // the usual startup code.
     27            
     28          	/* Disable the watchdog timer */
     29              SIM_COPC = 0x00;
   \                     start:
   \   00000000   0x....             LDR      R0,??DataTable2  ;; 0x40048100
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0x6001             STR      R1,[R0, #+0]
     30          
     31          	/* Copy any vector or data sections that need to be in RAM */
     32          	common_startup();
   \   00000006   0x.... 0x....      BL       common_startup
     33          
     34          	/* Perform processor initialization */
     35          	sysinit();
   \   0000000A   0x.... 0x....      BL       sysinit
     36                  
     37          #ifdef DEBUG_PRINT
     38              printf("                \r\n");
     39          	
     40          	/* Determine the last cause(s) of reset */
     41          	outSRS();	
     42          	
     43          	/* Determine specific Kinetis device and revision */
     44          	cpu_identify();
     45          #endif	
     46          	/* Jump to main process */
     47          	main();
   \   0000000E   0x.... 0x....      BL       main
     48          
     49          	/* No actions to perform after this so wait forever */
     50          	while(1);
   \                     ??start_0:
   \   00000012   0xE7FE             B        ??start_0
     51          }
     52          /********************************************************************/
     53          /*!
     54           * \brief   Kinetis Identify
     55           * \return  None
     56           *
     57           * This is primarly a reporting function that displays information
     58           * about the specific CPU to the default terminal including:
     59           * - Kinetis family
     60           * - package
     61           * - die revision
     62           * - P-flash size
     63           * - Ram size
     64           */

   \                                 In section .text, align 2, keep-with-next
     65          void cpu_identify (void)
     66          {
   \                     cpu_identify:
   \   00000000   0xB580             PUSH     {R7,LR}
     67            uint16 temp;
     68              /* Determine the Kinetis family */
     69              switch((SIM_SDID & SIM_SDID_FAMID(0x7))>>SIM_SDID_FAMID_SHIFT) 
   \   00000002   0x....             LDR      R0,??DataTable2_1  ;; 0x40048024
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0F00             LSRS     R0,R0,#+28
   \   00000008   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   0000000A   0x0F40             LSRS     R0,R0,#+29
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD006             BEQ      ??cpu_identify_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD00C             BEQ      ??cpu_identify_1
   \   00000014   0xD307             BCC      ??cpu_identify_2
   \   00000016   0x2804             CMP      R0,#+4
   \   00000018   0xD011             BEQ      ??cpu_identify_3
   \   0000001A   0xD30C             BCC      ??cpu_identify_4
   \   0000001C   0xE013             B        ??cpu_identify_5
     70              {  
     71              	case 0x0:
     72              		printf("\nK0");
   \                     ??cpu_identify_0:
   \   0000001E   0x....             ADR      R0,??DataTable2_2  ;; "\nK0"
   \   00000020   0x.... 0x....      BL       printf
     73              		break;
   \   00000024   0xE012             B        ??cpu_identify_6
     74              	case 0x1:
     75              		printf("\nK1");
   \                     ??cpu_identify_2:
   \   00000026   0x....             ADR      R0,??DataTable2_3  ;; "\nK1"
   \   00000028   0x.... 0x....      BL       printf
     76              		break;
   \   0000002C   0xE00E             B        ??cpu_identify_6
     77              	case 0x2:
     78              		printf("\nK2");
   \                     ??cpu_identify_1:
   \   0000002E   0x....             ADR      R0,??DataTable2_4  ;; "\nK2"
   \   00000030   0x.... 0x....      BL       printf
     79              		break;
   \   00000034   0xE00A             B        ??cpu_identify_6
     80              	case 0x3:
     81              		printf("\nK3");
   \                     ??cpu_identify_4:
   \   00000036   0x....             ADR      R0,??DataTable2_5  ;; "\nK3"
   \   00000038   0x.... 0x....      BL       printf
     82              		break;
   \   0000003C   0xE006             B        ??cpu_identify_6
     83              	case 0x4:
     84              		printf("\nK4");
   \                     ??cpu_identify_3:
   \   0000003E   0x....             ADR      R0,??DataTable2_6  ;; "\nK4"
   \   00000040   0x.... 0x....      BL       printf
     85              		break;
   \   00000044   0xE002             B        ??cpu_identify_6
     86          	default:
     87          		printf("\nUnrecognized Kinetis family device.\n");  
   \                     ??cpu_identify_5:
   \   00000046   0x....             LDR      R0,??DataTable2_7
   \   00000048   0x.... 0x....      BL       printf
     88          		break;  	
     89              }
     90              
     91              /* Determine Sub-Family ID */
     92              switch((SIM_SDID & SIM_SDID_SUBFAMID(0x7))>>SIM_SDID_SUBFAMID_SHIFT) 
   \                     ??cpu_identify_6:
   \   0000004C   0x....             LDR      R0,??DataTable2_1  ;; 0x40048024
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x0E00             LSRS     R0,R0,#+24
   \   00000052   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   00000054   0x0F40             LSRS     R0,R0,#+29
   \   00000056   0x2804             CMP      R0,#+4
   \   00000058   0xD002             BEQ      ??cpu_identify_7
   \   0000005A   0x2805             CMP      R0,#+5
   \   0000005C   0xD004             BEQ      ??cpu_identify_8
   \   0000005E   0xE007             B        ??cpu_identify_9
     93              {  
     94              	case 0x4:
     95              		printf("4");
   \                     ??cpu_identify_7:
   \   00000060   0x....             ADR      R0,??DataTable2_8  ;; "4"
   \   00000062   0x.... 0x....      BL       printf
     96              		break;
   \   00000066   0xE006             B        ??cpu_identify_10
     97              	case 0x5:
     98              		printf("5");
   \                     ??cpu_identify_8:
   \   00000068   0x....             ADR      R0,??DataTable2_9  ;; "5"
   \   0000006A   0x.... 0x....      BL       printf
     99              		break;
   \   0000006E   0xE002             B        ??cpu_identify_10
    100          	default:
    101          		printf("\nUnrecognized Kinetis sub-family device.\n");  
   \                     ??cpu_identify_9:
   \   00000070   0x....             LDR      R0,??DataTable2_10
   \   00000072   0x.... 0x....      BL       printf
    102          		break;  	
    103              }
    104              
    105              /* Determine the package size */
    106              switch((SIM_SDID & SIM_SDID_PINID(0xF))>>SIM_SDID_PINID_SHIFT) 
   \                     ??cpu_identify_10:
   \   00000076   0x....             LDR      R0,??DataTable2_1  ;; 0x40048024
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x0700             LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   0000007C   0x0F00             LSRS     R0,R0,#+28
   \   0000007E   0x2806             CMP      R0,#+6
   \   00000080   0xD007             BEQ      ??cpu_identify_11
   \   00000082   0xD31A             BCC      ??cpu_identify_12
   \   00000084   0x2808             CMP      R0,#+8
   \   00000086   0xD00C             BEQ      ??cpu_identify_13
   \   00000088   0xD307             BCC      ??cpu_identify_14
   \   0000008A   0x280A             CMP      R0,#+10
   \   0000008C   0xD011             BEQ      ??cpu_identify_15
   \   0000008E   0xD30C             BCC      ??cpu_identify_16
   \   00000090   0xE013             B        ??cpu_identify_12
    107              {  
    108              		break;
    109              	case 0x6:
    110              		printf("80pin       ");
   \                     ??cpu_identify_11:
   \   00000092   0x....             LDR      R0,??DataTable2_11
   \   00000094   0x.... 0x....      BL       printf
    111              		break;
   \   00000098   0xE012             B        ??cpu_identify_17
    112              	case 0x7:
    113              		printf("81pin       ");
   \                     ??cpu_identify_14:
   \   0000009A   0x....             LDR      R0,??DataTable2_12
   \   0000009C   0x.... 0x....      BL       printf
    114              		break;
   \   000000A0   0xE00E             B        ??cpu_identify_17
    115              	case 0x8:
    116              		printf("100pin      ");
   \                     ??cpu_identify_13:
   \   000000A2   0x....             LDR      R0,??DataTable2_13
   \   000000A4   0x.... 0x....      BL       printf
    117              		break;
   \   000000A8   0xE00A             B        ??cpu_identify_17
    118              	case 0x9:
    119              		printf("121pin      ");
   \                     ??cpu_identify_16:
   \   000000AA   0x....             LDR      R0,??DataTable2_14
   \   000000AC   0x.... 0x....      BL       printf
    120              		break;
   \   000000B0   0xE006             B        ??cpu_identify_17
    121              	case 0xA:
    122              		printf("144pin      ");
   \                     ??cpu_identify_15:
   \   000000B2   0x....             LDR      R0,??DataTable2_15
   \   000000B4   0x.... 0x....      BL       printf
    123              		break;
   \   000000B8   0xE002             B        ??cpu_identify_17
    124          	default:
    125          		printf("\nUnrecognized Kinetis package code.      ");  
   \                     ??cpu_identify_12:
   \   000000BA   0x....             LDR      R0,??DataTable2_16
   \   000000BC   0x.... 0x....      BL       printf
    126          		break;  	
    127              }
    128              
    129              /* Determine Attribute ID */
    130             /*
    131              switch((SIM_SDID & SIM_SDID_ATTRID(0x7))>>SIM_SDID_ATTRID_SHIFT) 
    132              {  
    133              	case 0x1:
    134              		printf(" Low Power Line with Cortex M0+\n\n");
    135              		break;
    136          	default:
    137          		printf("\nUnrecognized Kinetis family attribute.\n");  
    138          		break;  	
    139              }
    140              */
    141              /* Determine the System SRAM Size */
    142              switch((SIM_SDID & SIM_SDID_SRAMSIZE(0x7))>>SIM_SDID_SRAMSIZE_SHIFT) 
   \                     ??cpu_identify_17:
   \   000000C0   0x....             LDR      R0,??DataTable2_1  ;; 0x40048024
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x0C00             LSRS     R0,R0,#+16
   \   000000C6   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   000000C8   0x0F40             LSRS     R0,R0,#+29
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD00B             BEQ      ??cpu_identify_18
   \   000000CE   0x2802             CMP      R0,#+2
   \   000000D0   0xD011             BEQ      ??cpu_identify_19
   \   000000D2   0xD30C             BCC      ??cpu_identify_20
   \   000000D4   0x2804             CMP      R0,#+4
   \   000000D6   0xD016             BEQ      ??cpu_identify_21
   \   000000D8   0xD311             BCC      ??cpu_identify_22
   \   000000DA   0x2806             CMP      R0,#+6
   \   000000DC   0xD01B             BEQ      ??cpu_identify_23
   \   000000DE   0xD316             BCC      ??cpu_identify_24
   \   000000E0   0x2807             CMP      R0,#+7
   \   000000E2   0xD01C             BEQ      ??cpu_identify_25
   \   000000E4   0xE01F             B        ??cpu_identify_26
    143              {  
    144              	case 0x0:
    145                    printf("SRAM Size: 0.5 KB\n");
   \                     ??cpu_identify_18:
   \   000000E6   0x....             LDR      R0,??DataTable2_17
   \   000000E8   0x.... 0x....      BL       printf
    146              		break;
   \   000000EC   0xE01E             B        ??cpu_identify_27
    147                  case 0x1:
    148                    printf("SRAM Size:  1 KB\n");
   \                     ??cpu_identify_20:
   \   000000EE   0x....             LDR      R0,??DataTable2_18
   \   000000F0   0x.... 0x....      BL       printf
    149                    break;
   \   000000F4   0xE01A             B        ??cpu_identify_27
    150                  case 0x2:
    151                    printf("SRAM Size:  2 KB\n");
   \                     ??cpu_identify_19:
   \   000000F6   0x....             LDR      R0,??DataTable2_19
   \   000000F8   0x.... 0x....      BL       printf
    152                    break;
   \   000000FC   0xE016             B        ??cpu_identify_27
    153                  case 0x3:
    154                    printf("SRAM Size:  4 KB\n");
   \                     ??cpu_identify_22:
   \   000000FE   0x....             LDR      R0,??DataTable2_20
   \   00000100   0x.... 0x....      BL       printf
    155                    break;
   \   00000104   0xE012             B        ??cpu_identify_27
    156                  case 0x4:
    157                    printf("SRAM Size:  8 KB\n");
   \                     ??cpu_identify_21:
   \   00000106   0x....             LDR      R0,??DataTable2_21
   \   00000108   0x.... 0x....      BL       printf
    158                    break;
   \   0000010C   0xE00E             B        ??cpu_identify_27
    159                  case 0x5:
    160                    printf("SRAM Size:  16 KB\n");
   \                     ??cpu_identify_24:
   \   0000010E   0x....             LDR      R0,??DataTable2_22
   \   00000110   0x.... 0x....      BL       printf
    161                    break;
   \   00000114   0xE00A             B        ??cpu_identify_27
    162                  case 0x6:
    163                    printf("SRAM Size:  32 KB\n");
   \                     ??cpu_identify_23:
   \   00000116   0x....             LDR      R0,??DataTable2_23
   \   00000118   0x.... 0x....      BL       printf
    164                    break;
   \   0000011C   0xE006             B        ??cpu_identify_27
    165                  case 0x7:
    166                    printf("SRAM Size:  64 KB\n");
   \                     ??cpu_identify_25:
   \   0000011E   0x....             LDR      R0,??DataTable2_24
   \   00000120   0x.... 0x....      BL       printf
    167                    break;
   \   00000124   0xE002             B        ??cpu_identify_27
    168          	default:
    169          		printf("\nUnrecognized SRAM Size.\n");  
   \                     ??cpu_identify_26:
   \   00000126   0x....             LDR      R0,??DataTable2_25
   \   00000128   0x.... 0x....      BL       printf
    170          		break;  	
    171              }                
    172          
    173              /* Determine the revision ID */
    174              temp = ((SIM_SDID_REVID(0xF))>>SIM_SDID_REVID_SHIFT);
   \                     ??cpu_identify_27:
   \   0000012C   0x210F             MOVS     R1,#+15
    175              printf("Silicon rev %d\n ", temp);
   \   0000012E   0xB289             UXTH     R1,R1
   \   00000130   0x....             LDR      R0,??DataTable2_26
   \   00000132   0x.... 0x....      BL       printf
    176              
    177              /* Determine the flash revision */
    178              //flash_identify();    
    179              
    180              /* Determine the P-flash size */
    181            switch((SIM_FCFG1 & SIM_FCFG1_PFSIZE(0xF))>>SIM_FCFG1_PFSIZE_SHIFT)
   \   00000136   0x....             LDR      R0,??DataTable2_27  ;; 0x4004804c
   \   00000138   0x6800             LDR      R0,[R0, #+0]
   \   0000013A   0x0E00             LSRS     R0,R0,#+24
   \   0000013C   0x0700             LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   0000013E   0x0F00             LSRS     R0,R0,#+28
   \   00000140   0x2800             CMP      R0,#+0
   \   00000142   0xD00C             BEQ      ??cpu_identify_28
   \   00000144   0x2801             CMP      R0,#+1
   \   00000146   0xD00E             BEQ      ??cpu_identify_29
   \   00000148   0x2803             CMP      R0,#+3
   \   0000014A   0xD010             BEQ      ??cpu_identify_30
   \   0000014C   0x2805             CMP      R0,#+5
   \   0000014E   0xD012             BEQ      ??cpu_identify_31
   \   00000150   0x2807             CMP      R0,#+7
   \   00000152   0xD014             BEQ      ??cpu_identify_32
   \   00000154   0x2809             CMP      R0,#+9
   \   00000156   0xD016             BEQ      ??cpu_identify_33
   \   00000158   0x280F             CMP      R0,#+15
   \   0000015A   0xD018             BEQ      ??cpu_identify_34
   \   0000015C   0xE01B             B        ??cpu_identify_35
    182              {
    183            	case 0x0:
    184              		printf("Flash size:  8 KB program flash, 0.25 KB protection region\n");
   \                     ??cpu_identify_28:
   \   0000015E   0x....             LDR      R0,??DataTable2_28
   \   00000160   0x.... 0x....      BL       printf
    185              		break;
   \   00000164   0xE01A             B        ??cpu_identify_36
    186              	case 0x1:
    187              		printf("Flash size:  16 KB program flash, 0.5 KB protection region\n");
   \                     ??cpu_identify_29:
   \   00000166   0x....             LDR      R0,??DataTable2_29
   \   00000168   0x.... 0x....      BL       printf
    188              		break;
   \   0000016C   0xE016             B        ??cpu_identify_36
    189                  case 0x3:
    190              		printf("Flash size:  32 KB program flash, 1 KB protection region\n");
   \                     ??cpu_identify_30:
   \   0000016E   0x....             LDR      R0,??DataTable2_30
   \   00000170   0x.... 0x....      BL       printf
    191              		break;
   \   00000174   0xE012             B        ??cpu_identify_36
    192              	case 0x5:
    193              		printf("Flash size:  64 KB program flash, 2 KB protection region\n");
   \                     ??cpu_identify_31:
   \   00000176   0x....             LDR      R0,??DataTable2_31
   \   00000178   0x.... 0x....      BL       printf
    194              		break;
   \   0000017C   0xE00E             B        ??cpu_identify_36
    195                  case 0x7:
    196              		printf("Flash size:  128 KB program flash, 4 KB protection region\n");
   \                     ??cpu_identify_32:
   \   0000017E   0x....             LDR      R0,??DataTable2_32
   \   00000180   0x.... 0x....      BL       printf
    197              		break;
   \   00000184   0xE00A             B        ??cpu_identify_36
    198                  case 0x9:
    199              		printf("Flash size:  256 KB program flash, 4 KB protection region\n");
   \                     ??cpu_identify_33:
   \   00000186   0x....             LDR      R0,??DataTable2_33
   \   00000188   0x.... 0x....      BL       printf
    200              		break;
   \   0000018C   0xE006             B        ??cpu_identify_36
    201                  case 0xF:
    202              		printf("Flash size:  128 KB program flash, 4 KB protection region\n");
   \                     ??cpu_identify_34:
   \   0000018E   0x....             LDR      R0,??DataTable2_32
   \   00000190   0x.... 0x....      BL       printf
    203              		break;
   \   00000194   0xE002             B        ??cpu_identify_36
    204          	default:
    205          		printf("ERR!! Undefined flash size\n");  
   \                     ??cpu_identify_35:
   \   00000196   0x....             LDR      R0,??DataTable2_34
   \   00000198   0x.... 0x....      BL       printf
    206          		break;  	  		
    207              }
    208          }
   \                     ??cpu_identify_36:
   \   0000019C   0xBD01             POP      {R0,PC}          ;; return
    209          /********************************************************************/
    210          /*!
    211           * \brief   flash Identify
    212           * \return  None
    213           *
    214           * This is primarly a reporting function that displays information
    215           * about the specific flash parameters and flash version ID for 
    216           * the current device. These parameters are obtained using a special
    217           * flash command call "read resource." The first four bytes returned
    218           * are the flash parameter revision, and the second four bytes are
    219           * the flash version ID.
    220           */

   \                                 In section .text, align 2, keep-with-next
    221          void flash_identify (void)
    222          {
   \                     flash_identify:
   \   00000000   0xB500             PUSH     {LR}
    223              /* Get the flash parameter version */
    224          
    225              /* Write the flash FCCOB registers with the values for a read resource command */
    226              FTFA_FCCOB0 = 0x03;
   \   00000002   0x....             LDR      R0,??DataTable2_35  ;; 0x40020007
   \   00000004   0x2103             MOVS     R1,#+3
   \   00000006   0x7001             STRB     R1,[R0, #+0]
    227              FTFA_FCCOB1 = 0x00;
   \   00000008   0x....             LDR      R0,??DataTable2_36  ;; 0x40020006
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
    228              FTFA_FCCOB2 = 0x00;
   \   0000000E   0x....             LDR      R0,??DataTable2_37  ;; 0x40020005
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x7001             STRB     R1,[R0, #+0]
    229              FTFA_FCCOB3 = 0x00;
   \   00000014   0x....             LDR      R0,??DataTable2_38  ;; 0x40020004
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x7001             STRB     R1,[R0, #+0]
    230              FTFA_FCCOB8 = 0x01;
   \   0000001A   0x....             LDR      R0,??DataTable2_39  ;; 0x4002000f
   \   0000001C   0x2101             MOVS     R1,#+1
   \   0000001E   0x7001             STRB     R1,[R0, #+0]
    231          
    232              /* All required FCCOBx registers are written, so launch the command */
    233              FTFA_FSTAT = FTFA_FSTAT_CCIF_MASK;
   \   00000020   0x....             LDR      R0,??DataTable2_40  ;; 0x40020000
   \   00000022   0x2180             MOVS     R1,#+128
   \   00000024   0x7001             STRB     R1,[R0, #+0]
    234          
    235              /* Wait for the command to complete */
    236              while(!(FTFA_FSTAT & FTFA_FSTAT_CCIF_MASK));
   \                     ??flash_identify_0:
   \   00000026   0x....             LDR      R0,??DataTable2_40  ;; 0x40020000
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x0600             LSLS     R0,R0,#+24
   \   0000002C   0xD5FB             BPL      ??flash_identify_0
    237              
    238          //    printf("Flash parameter version %d.%d.%d.%d\n",FTFA_FCCOB4,FTFA_FCCOB5,FTFA_FCCOB6,FTFA_FCCOB7);
    239          
    240              /* Get the flash version ID */   
    241          
    242              /* Write the flash FCCOB registers with the values for a read resource command */
    243              FTFA_FCCOB0 = 0x03;
   \   0000002E   0x....             LDR      R0,??DataTable2_35  ;; 0x40020007
   \   00000030   0x2103             MOVS     R1,#+3
   \   00000032   0x7001             STRB     R1,[R0, #+0]
    244              FTFA_FCCOB1 = 0x00;
   \   00000034   0x....             LDR      R0,??DataTable2_36  ;; 0x40020006
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x7001             STRB     R1,[R0, #+0]
    245              FTFA_FCCOB2 = 0x00;
   \   0000003A   0x....             LDR      R0,??DataTable2_37  ;; 0x40020005
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
    246              FTFA_FCCOB3 = 0x04;
   \   00000040   0x....             LDR      R0,??DataTable2_38  ;; 0x40020004
   \   00000042   0x2104             MOVS     R1,#+4
   \   00000044   0x7001             STRB     R1,[R0, #+0]
    247              FTFA_FCCOB8 = 0x01;
   \   00000046   0x....             LDR      R0,??DataTable2_39  ;; 0x4002000f
   \   00000048   0x2101             MOVS     R1,#+1
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    248          
    249              /* All required FCCOBx registers are written, so launch the command */
    250              FTFA_FSTAT = FTFA_FSTAT_CCIF_MASK;
   \   0000004C   0x....             LDR      R0,??DataTable2_40  ;; 0x40020000
   \   0000004E   0x2180             MOVS     R1,#+128
   \   00000050   0x7001             STRB     R1,[R0, #+0]
    251          
    252              /* Wait for the command to complete */
    253              while(!(FTFA_FSTAT & FTFA_FSTAT_CCIF_MASK));
   \                     ??flash_identify_1:
   \   00000052   0x....             LDR      R0,??DataTable2_40  ;; 0x40020000
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x0600             LSLS     R0,R0,#+24
   \   00000058   0xD5FB             BPL      ??flash_identify_1
    254          
    255          //    printf("Flash version ID %d.%d.%d.%d\n",FTFA_FCCOB4,FTFA_FCCOB5,FTFA_FCCOB6,FTFA_FCCOB7);  
    256          }
   \   0000005A   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x40048100         DC32     0x40048100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40048024         DC32     0x40048024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x0A 0x4B          DC8      "\nK0"
   \              0x30 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x0A 0x4B          DC8      "\nK1"
   \              0x31 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x0A 0x4B          DC8      "\nK2"
   \              0x32 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x0A 0x4B          DC8      "\nK3"
   \              0x33 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x0A 0x4B          DC8      "\nK4"
   \              0x34 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     `?<Constant "\\nUnrecognized Kinetis...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x34 0x00          DC8      "4",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x35 0x00          DC8      "5",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     `?<Constant "\\nUnrecognized Kinetis...">_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     `?<Constant "80pin       ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     `?<Constant "81pin       ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     `?<Constant "100pin      ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     `?<Constant "121pin      ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     `?<Constant "144pin      ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     `?<Constant "\\nUnrecognized Kinetis...">_2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     `?<Constant "SRAM Size: 0.5 KB\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x........         DC32     `?<Constant "SRAM Size:  1 KB\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     `?<Constant "SRAM Size:  2 KB\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x........         DC32     `?<Constant "SRAM Size:  4 KB\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x........         DC32     `?<Constant "SRAM Size:  8 KB\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x........         DC32     `?<Constant "SRAM Size:  16 KB\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x........         DC32     `?<Constant "SRAM Size:  32 KB\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x........         DC32     `?<Constant "SRAM Size:  64 KB\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x........         DC32     `?<Constant "\\nUnrecognized SRAM Si...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_26:
   \   00000000   0x........         DC32     `?<Constant "Silicon rev %d\\n ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_27:
   \   00000000   0x4004804C         DC32     0x4004804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_28:
   \   00000000   0x........         DC32     `?<Constant "Flash size:  8 KB pro...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_29:
   \   00000000   0x........         DC32     `?<Constant "Flash size:  16 KB pr...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_30:
   \   00000000   0x........         DC32     `?<Constant "Flash size:  32 KB pr...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_31:
   \   00000000   0x........         DC32     `?<Constant "Flash size:  64 KB pr...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_32:
   \   00000000   0x........         DC32     `?<Constant "Flash size:  128 KB p...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_33:
   \   00000000   0x........         DC32     `?<Constant "Flash size:  256 KB p...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_34:
   \   00000000   0x........         DC32     `?<Constant "ERR!! Undefined flash...">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_35:
   \   00000000   0x40020007         DC32     0x40020007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_36:
   \   00000000   0x40020006         DC32     0x40020006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_37:
   \   00000000   0x40020005         DC32     0x40020005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_38:
   \   00000000   0x40020004         DC32     0x40020004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_39:
   \   00000000   0x4002000F         DC32     0x4002000f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_40:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .rodata, align 4
   \   00000000   0x0A 0x4B          DC8 "\012K0"
   \              0x30 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0A 0x4B          DC8 "\012K1"
   \              0x31 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0A 0x4B          DC8 "\012K2"
   \              0x32 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0A 0x4B          DC8 "\012K3"
   \              0x33 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x0A 0x4B          DC8 "\012K4"
   \              0x34 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nUnrecognized Kinetis...">`:
   \   00000000   0x0A 0x55          DC8 "\012Unrecognized Kinetis family device.\012"
   \              0x6E 0x72    
   \              0x65 0x63    
   \              0x6F 0x67    
   \              0x6E 0x69    
   \              0x7A 0x65    
   \              0x64 0x20    
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0x20    
   \              0x66 0x61    
   \              0x6D 0x69    
   \              0x6C 0x79    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x2E    
   \              0x0A 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2
   \   00000000   0x34 0x00          DC8 "4"

   \                                 In section .rodata, align 2
   \   00000000   0x35 0x00          DC8 "5"

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nUnrecognized Kinetis...">_1`:
   \   00000000   0x0A 0x55          DC8 "\012Unrecognized Kinetis sub-family device.\012"
   \              0x6E 0x72    
   \              0x65 0x63    
   \              0x6F 0x67    
   \              0x6E 0x69    
   \              0x7A 0x65    
   \              0x64 0x20    
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0x20    
   \              0x73 0x75    
   \              0x62 0x2D    
   \              0x66 0x61    
   \              0x6D 0x69    
   \              0x6C 0x79    
   \              0x20 0x64    
   \              0x65 0x76    
   \              0x69 0x63    
   \              0x65 0x2E    
   \              0x0A 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "80pin       ">`:
   \   00000000   0x38 0x30          DC8 "80pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "81pin       ">`:
   \   00000000   0x38 0x31          DC8 "81pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "100pin      ">`:
   \   00000000   0x31 0x30          DC8 "100pin      "
   \              0x30 0x70    
   \              0x69 0x6E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "121pin      ">`:
   \   00000000   0x31 0x32          DC8 "121pin      "
   \              0x31 0x70    
   \              0x69 0x6E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "144pin      ">`:
   \   00000000   0x31 0x34          DC8 "144pin      "
   \              0x34 0x70    
   \              0x69 0x6E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nUnrecognized Kinetis...">_2`:
   \   00000000   0x0A 0x55          DC8 "\012Unrecognized Kinetis package code.      "
   \              0x6E 0x72    
   \              0x65 0x63    
   \              0x6F 0x67    
   \              0x6E 0x69    
   \              0x7A 0x65    
   \              0x64 0x20    
   \              0x4B 0x69    
   \              0x6E 0x65    
   \              0x74 0x69    
   \              0x73 0x20    
   \              0x70 0x61    
   \              0x63 0x6B    
   \              0x61 0x67    
   \              0x65 0x20    
   \              0x63 0x6F    
   \              0x64 0x65    
   \              0x2E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    
   \   0000002A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SRAM Size: 0.5 KB\\n">`:
   \   00000000   0x53 0x52          DC8 "SRAM Size: 0.5 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x30    
   \              0x2E 0x35    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SRAM Size:  1 KB\\n">`:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  1 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x31 0x20    
   \              0x4B 0x42    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SRAM Size:  2 KB\\n">`:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  2 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x32 0x20    
   \              0x4B 0x42    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SRAM Size:  4 KB\\n">`:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  4 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x34 0x20    
   \              0x4B 0x42    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SRAM Size:  8 KB\\n">`:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  8 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x38 0x20    
   \              0x4B 0x42    
   \              0x0A 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SRAM Size:  16 KB\\n">`:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  16 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x31 0x36    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SRAM Size:  32 KB\\n">`:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  32 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x33 0x32    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "SRAM Size:  64 KB\\n">`:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  64 KB\012"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x36 0x34    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\nUnrecognized SRAM Si...">`:
   \   00000000   0x0A 0x55          DC8 "\012Unrecognized SRAM Size.\012"
   \              0x6E 0x72    
   \              0x65 0x63    
   \              0x6F 0x67    
   \              0x6E 0x69    
   \              0x7A 0x65    
   \              0x64 0x20    
   \              0x53 0x52    
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x2E    
   \              0x0A 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Silicon rev %d\\n ">`:
   \   00000000   0x53 0x69          DC8 "Silicon rev %d\012 "
   \              0x6C 0x69    
   \              0x63 0x6F    
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x76 0x20    
   \              0x25 0x64    
   \              0x0A 0x20    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash size:  8 KB pro...">`:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 38H, 20H, 4BH
   \              0x3A 0x20    
   \              0x20 0x38    
   \              0x20 0x4B    
   \   00000010   0x42 0x20          DC8 42H, 20H, 70H, 72H, 6FH, 67H, 72H, 61H
   \              0x70 0x72    
   \              0x6F 0x67    
   \              0x72 0x61    
   \   00000018   0x6D 0x20          DC8 6DH, 20H, 66H, 6CH, 61H, 73H, 68H, 2CH
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x2C    
   \   00000020   0x20 0x30          DC8 20H, 30H, 2EH, 32H, 35H, 20H, 4BH, 42H
   \              0x2E 0x32    
   \              0x35 0x20    
   \              0x4B 0x42    
   \   00000028   0x20 0x70          DC8 20H, 70H, 72H, 6FH, 74H, 65H, 63H, 74H
   \              0x72 0x6F    
   \              0x74 0x65    
   \              0x63 0x74    
   \   00000030   0x69 0x6F          DC8 69H, 6FH, 6EH, 20H, 72H, 65H, 67H, 69H
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x67 0x69    
   \   00000038   0x6F 0x6E          DC8 6FH, 6EH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash size:  16 KB pr...">`:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 31H, 36H, 20H
   \              0x3A 0x20    
   \              0x20 0x31    
   \              0x36 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 30H, 2EH, 35H, 20H, 4BH, 42H
   \              0x30 0x2E    
   \              0x35 0x20    
   \              0x4B 0x42    
   \   00000028   0x20 0x70          DC8 20H, 70H, 72H, 6FH, 74H, 65H, 63H, 74H
   \              0x72 0x6F    
   \              0x74 0x65    
   \              0x63 0x74    
   \   00000030   0x69 0x6F          DC8 69H, 6FH, 6EH, 20H, 72H, 65H, 67H, 69H
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x67 0x69    
   \   00000038   0x6F 0x6E          DC8 6FH, 6EH, 0AH, 0
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash size:  32 KB pr...">`:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 33H, 32H, 20H
   \              0x3A 0x20    
   \              0x20 0x33    
   \              0x32 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 31H, 20H, 4BH, 42H, 20H, 70H
   \              0x31 0x20    
   \              0x4B 0x42    
   \              0x20 0x70    
   \   00000028   0x72 0x6F          DC8 72H, 6FH, 74H, 65H, 63H, 74H, 69H, 6FH
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \   00000030   0x6E 0x20          DC8 6EH, 20H, 72H, 65H, 67H, 69H, 6FH, 6EH
   \              0x72 0x65    
   \              0x67 0x69    
   \              0x6F 0x6E    
   \   00000038   0x0A 0x00          DC8 0AH, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash size:  64 KB pr...">`:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 36H, 34H, 20H
   \              0x3A 0x20    
   \              0x20 0x36    
   \              0x34 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 32H, 20H, 4BH, 42H, 20H, 70H
   \              0x32 0x20    
   \              0x4B 0x42    
   \              0x20 0x70    
   \   00000028   0x72 0x6F          DC8 72H, 6FH, 74H, 65H, 63H, 74H, 69H, 6FH
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \   00000030   0x6E 0x20          DC8 6EH, 20H, 72H, 65H, 67H, 69H, 6FH, 6EH
   \              0x72 0x65    
   \              0x67 0x69    
   \              0x6F 0x6E    
   \   00000038   0x0A 0x00          DC8 0AH, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash size:  128 KB p...">`:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 31H, 32H, 38H
   \              0x3A 0x20    
   \              0x20 0x31    
   \              0x32 0x38    
   \   00000010   0x20 0x4B          DC8 20H, 4BH, 42H, 20H, 70H, 72H, 6FH, 67H
   \              0x42 0x20    
   \              0x70 0x72    
   \              0x6F 0x67    
   \   00000018   0x72 0x61          DC8 72H, 61H, 6DH, 20H, 66H, 6CH, 61H, 73H
   \              0x6D 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \   00000020   0x68 0x2C          DC8 68H, 2CH, 20H, 34H, 20H, 4BH, 42H, 20H
   \              0x20 0x34    
   \              0x20 0x4B    
   \              0x42 0x20    
   \   00000028   0x70 0x72          DC8 70H, 72H, 6FH, 74H, 65H, 63H, 74H, 69H
   \              0x6F 0x74    
   \              0x65 0x63    
   \              0x74 0x69    
   \   00000030   0x6F 0x6E          DC8 6FH, 6EH, 20H, 72H, 65H, 67H, 69H, 6FH
   \              0x20 0x72    
   \              0x65 0x67    
   \              0x69 0x6F    
   \   00000038   0x6E 0x0A          DC8 6EH, 0AH, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "Flash size:  256 KB p...">`:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 32H, 35H, 36H
   \              0x3A 0x20    
   \              0x20 0x32    
   \              0x35 0x36    
   \   00000010   0x20 0x4B          DC8 20H, 4BH, 42H, 20H, 70H, 72H, 6FH, 67H
   \              0x42 0x20    
   \              0x70 0x72    
   \              0x6F 0x67    
   \   00000018   0x72 0x61          DC8 72H, 61H, 6DH, 20H, 66H, 6CH, 61H, 73H
   \              0x6D 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \   00000020   0x68 0x2C          DC8 68H, 2CH, 20H, 34H, 20H, 4BH, 42H, 20H
   \              0x20 0x34    
   \              0x20 0x4B    
   \              0x42 0x20    
   \   00000028   0x70 0x72          DC8 70H, 72H, 6FH, 74H, 65H, 63H, 74H, 69H
   \              0x6F 0x74    
   \              0x65 0x63    
   \              0x74 0x69    
   \   00000030   0x6F 0x6E          DC8 6FH, 6EH, 20H, 72H, 65H, 67H, 69H, 6FH
   \              0x20 0x72    
   \              0x65 0x67    
   \              0x69 0x6F    
   \   00000038   0x6E 0x0A          DC8 6EH, 0AH, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "ERR!! Undefined flash...">`:
   \   00000000   0x45 0x52          DC8 "ERR!! Undefined flash size\012"
   \              0x52 0x21    
   \              0x21 0x20    
   \              0x55 0x6E    
   \              0x64 0x65    
   \              0x66 0x69    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x0A 0x00    
    257          /********************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  cpu_identify
             8 -> printf
        4  flash_identify
        0  start
             0 -> common_startup
             0 -> main
             0 -> sysinit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "100pin      ">
      16  ?<Constant "121pin      ">
      16  ?<Constant "144pin      ">
       2  ?<Constant "4">
       2  ?<Constant "5">
      16  ?<Constant "80pin       ">
      16  ?<Constant "81pin       ">
      28  ?<Constant "ERR!! Undefined flash...">
      60  ?<Constant "Flash size:  128 KB p...">
      60  ?<Constant "Flash size:  16 KB pr...">
      60  ?<Constant "Flash size:  256 KB p...">
      60  ?<Constant "Flash size:  32 KB pr...">
      60  ?<Constant "Flash size:  64 KB pr...">
      60  ?<Constant "Flash size:  8 KB pro...">
      20  ?<Constant "SRAM Size:  1 KB\n">
      20  ?<Constant "SRAM Size:  16 KB\n">
      20  ?<Constant "SRAM Size:  2 KB\n">
      20  ?<Constant "SRAM Size:  32 KB\n">
      20  ?<Constant "SRAM Size:  4 KB\n">
      20  ?<Constant "SRAM Size:  64 KB\n">
      20  ?<Constant "SRAM Size:  8 KB\n">
      20  ?<Constant "SRAM Size: 0.5 KB\n">
      20  ?<Constant "Silicon rev %d\n ">
       4  ?<Constant "\nK0">
       4  ?<Constant "\nK1">
       4  ?<Constant "\nK2">
       4  ?<Constant "\nK3">
       4  ?<Constant "\nK4">
      40  ?<Constant "\nUnrecognized Kinetis...">
      44  ?<Constant "\nUnrecognized Kinetis...">_1
      44  ?<Constant "\nUnrecognized Kinetis...">_2
      28  ?<Constant "\nUnrecognized SRAM Si...">
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_26
       4  ??DataTable2_27
       4  ??DataTable2_28
       4  ??DataTable2_29
       4  ??DataTable2_3
       4  ??DataTable2_30
       4  ??DataTable2_31
       4  ??DataTable2_32
       4  ??DataTable2_33
       4  ??DataTable2_34
       4  ??DataTable2_35
       4  ??DataTable2_36
       4  ??DataTable2_37
       4  ??DataTable2_38
       4  ??DataTable2_39
       4  ??DataTable2_4
       4  ??DataTable2_40
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
     414  cpu_identify
      92  flash_identify
      20  start

 
 828 bytes in section .rodata
 690 bytes in section .text
 
 690 bytes of CODE  memory
 828 bytes of CONST memory

Errors: none
Warnings: none
