###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      15/Jul/2015  14:11:14 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\User\Desktop\freescale\source\demo_i2s\src\hal\ #
#                    hal_i2s.c                                                #
#    Command line =  C:\Users\User\Desktop\freescale\source\demo_i2s\src\hal\ #
#                    hal_i2s.c -lCN C:\Users\User\Desktop\freescale\source\De #
#                    bug\List\ -o C:\Users\User\Desktop\freescale\source\Debu #
#                    g\Obj\ --no_cse --no_unroll --no_inline                  #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --char_is_signed --fpu=None --dlib_config             #
#                    "C:\Program Files\IAR Systems\Embedded Workbench         #
#                    6.5\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    D:\work\prj\g_demo_k\demo_k\src\include\ -On             #
#    List file    =  C:\Users\User\Desktop\freescale\source\Debug\List\hal_i2 #
#                    s.lst                                                    #
#    Object file  =  C:\Users\User\Desktop\freescale\source\Debug\Obj\hal_i2s #
#                    .o                                                       #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\User\Desktop\freescale\source\demo_i2s\src\hal\hal_i2s.c
      1          
      2          
      3          #include "..\\include\\global.h"
      4          #include "..\\include\\MKxxx.h"
      5          #include "..\\include\\hal_config.h"
      6          
      7          

   \                                 In section .text, align 2, keep-with-next
      8          static void _set_clock_112896(void)
      9          {
     10              SIM_SCGC6 &= ~(SIM_SCGC6_I2S_MASK);
   \                     _set_clock_112896:
   \   00000000   0x....             LDR.N    R0,??DataTable5  ;; 0x4004803c
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF430 0x4000      BICS     R0,R0,#0x8000
   \   00000008   0x....             LDR.N    R1,??DataTable5  ;; 0x4004803c
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     11          
     12              // output = input¡Á[(I2SFRAC+1) / (I2SDIV+1) ] = (48* (4/17))
     13              // SIM_CLKDIV2 |= SIM_CLKDIV2_I2SDIV(16) | SIM_CLKDIV2_I2SFRAC(3);
     14              I2S0_MDR = I2S_MDR_FRACT(3) | I2S_MDR_DIVIDE(16);
   \   0000000C   0x....             LDR.N    R0,??DataTable5_1  ;; 0x4002f104
   \   0000000E   0xF243 0x0110      MOVW     R1,#+12304
   \   00000012   0x6001             STR      R1,[R0, #+0]
     15              SIM_SCGC6 |= SIM_SCGC6_I2S_MASK;
   \   00000014   0x....             LDR.N    R0,??DataTable5  ;; 0x4004803c
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   0000001C   0x....             LDR.N    R1,??DataTable5  ;; 0x4004803c
   \   0000001E   0x6008             STR      R0,[R1, #+0]
     16          }
   \   00000020   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     17          static void _set_clock_122800(void)
     18          {
     19              // output = input ¡Á[(I2SFRAC+1) / (I2SDIV+1) ] = (48M* (32/125))
     20              // SIM_CLKDIV2 |= SIM_CLKDIV2_I2SDIV(124) | SIM_CLKDIV2_I2SFRAC(31);
     21              I2S0_MDR = I2S_MDR_FRACT(31) | I2S_MDR_DIVIDE(124);
   \                     _set_clock_122800:
   \   00000000   0x....             LDR.N    R0,??DataTable5_1  ;; 0x4002f104
   \   00000002   0x....             LDR.N    R1,??DataTable5_2  ;; 0x1f07c
   \   00000004   0x6001             STR      R1,[R0, #+0]
     22          }
   \   00000006   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     23          static void _i2s_init(void)
     24          {
     25              #define I2S_CONFIG_WORDS_IN_A_FRAME 2
     26              #define I2S_CONFIG_BITS_IN_A_WORD   24
     27          
     28              I2S0_TCR1 = 4;// 6;    // water mark
   \                     _i2s_init:
   \   00000000   0x....             LDR.N    R0,??DataTable5_3  ;; 0x4002f004
   \   00000002   0x2104             MOVS     R1,#+4
   \   00000004   0x6001             STR      R1,[R0, #+0]
     29              I2S0_TCR2 |= (0<<30) | // master mode(Async mode)
     30                           (1<<26) | // MSEL = MCLK
     31                           (1<<25) | // CLK = drive on falling edge
     32                           (1<<24) ; // CLK = OUTPUT
   \   00000006   0x....             LDR.N    R0,??DataTable5_4  ;; 0x4002f008
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0xF050 0x60E0      ORRS     R0,R0,#0x7000000
   \   0000000E   0x....             LDR.N    R1,??DataTable5_4  ;; 0x4002f008
   \   00000010   0x6008             STR      R0,[R1, #+0]
     33          
     34              I2S0_TCR3 = (1<<16); // enable channel 0
   \   00000012   0x....             LDR.N    R0,??DataTable5_5  ;; 0x4002f00c
   \   00000014   0xF45F 0x3180      MOVS     R1,#+65536
   \   00000018   0x6001             STR      R1,[R0, #+0]
     35          
     36              I2S0_TCR4 = ((I2S_CONFIG_WORDS_IN_A_FRAME-1)<<16)  | // words in a frame
     37                          ((I2S_CONFIG_BITS_IN_A_WORD  -1)<<8)   | // bits in a word
     38                           (1<<4)                                | // MSB
     39                           (1<<3)                                | // one bit early
     40                           (1<<1)                                | // frame active low
     41                           (1<<0)                                ; // frame = output
   \   0000001A   0x....             LDR.N    R0,??DataTable5_6  ;; 0x4002f010
   \   0000001C   0x....             LDR.N    R1,??DataTable5_7  ;; 0x1171b
   \   0000001E   0x6001             STR      R1,[R0, #+0]
     42          
     43              I2S0_TCR5 = ((I2S_CONFIG_BITS_IN_A_WORD-1) <<24) | // word N width
     44                          ((I2S_CONFIG_BITS_IN_A_WORD-1) <<16) | // word 0 width
     45                           (0x17<<8);                            // right adjust, where the first bit starts
   \   00000020   0x....             LDR.N    R0,??DataTable5_8  ;; 0x4002f014
   \   00000022   0x....             LDR.N    R1,??DataTable5_9  ;; 0x17171700
   \   00000024   0x6001             STR      R1,[R0, #+0]
     46          
     47              I2S0_TMR = 0;
   \   00000026   0x....             LDR.N    R0,??DataTable5_10  ;; 0x4002f060
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x6001             STR      R1,[R0, #+0]
     48          
     49              // enable TX
     50              I2S0_TCSR = (0<<31) | // enable tx
     51                          (1<<28) | // enable bit clock
     52                          (1<<0);   // enable DMA request
   \   0000002C   0x....             LDR.N    R0,??DataTable5_11  ;; 0x4002f000
   \   0000002E   0x....             LDR.N    R1,??DataTable5_12  ;; 0x10000001
   \   00000030   0x6001             STR      R1,[R0, #+0]
     53          }
   \   00000032   0x4770             BX       LR               ;; return
     54          

   \                                 In section .text, align 2, keep-with-next
     55          static void _i2s_set_rate(int smprate)
     56          {
   \                     _i2s_set_rate:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
     57              unsigned char div;
     58              SIM_SCGC6 |= SIM_SCGC6_I2S_MASK;
   \   00000004   0x....             LDR.N    R0,??DataTable5  ;; 0x4004803c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   0000000C   0x....             LDR.N    R1,??DataTable5  ;; 0x4004803c
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     59          
     60              // Select MCLK input source
     61              I2S0_MCR = (1<<30)| // MCLK = output
     62                         (0<<24); // MCLK SRC = core clock = 48M
   \   00000010   0x....             LDR.N    R0,??DataTable5_13  ;; 0x4002f100
   \   00000012   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000016   0x6001             STR      R1,[R0, #+0]
     63          
     64              if((smprate == 11025)||(smprate == 22050)||(smprate == 44100))
   \   00000018   0xF642 0x3011      MOVW     R0,#+11025
   \   0000001C   0x4284             CMP      R4,R0
   \   0000001E   0xD007             BEQ.N    ??_i2s_set_rate_0
   \   00000020   0xF245 0x6022      MOVW     R0,#+22050
   \   00000024   0x4284             CMP      R4,R0
   \   00000026   0xD003             BEQ.N    ??_i2s_set_rate_0
   \   00000028   0xF64A 0x4044      MOVW     R0,#+44100
   \   0000002C   0x4284             CMP      R4,R0
   \   0000002E   0xD101             BNE.N    ??_i2s_set_rate_1
     65                  _set_clock_112896();
   \                     ??_i2s_set_rate_0:
   \   00000030   0x.... 0x....      BL       _set_clock_112896
     66          
     67              if((smprate == 8000) || (smprate == 12000) || (smprate == 16000) ||
     68                 (smprate == 24000)|| (smprate == 32000) || (smprate == 48000) )
   \                     ??_i2s_set_rate_1:
   \   00000034   0xF5B4 0x5FFA      CMP      R4,#+8000
   \   00000038   0xD011             BEQ.N    ??_i2s_set_rate_2
   \   0000003A   0xF642 0x60E0      MOVW     R0,#+12000
   \   0000003E   0x4284             CMP      R4,R0
   \   00000040   0xD00D             BEQ.N    ??_i2s_set_rate_2
   \   00000042   0xF5B4 0x5F7A      CMP      R4,#+16000
   \   00000046   0xD00A             BEQ.N    ??_i2s_set_rate_2
   \   00000048   0xF645 0x50C0      MOVW     R0,#+24000
   \   0000004C   0x4284             CMP      R4,R0
   \   0000004E   0xD006             BEQ.N    ??_i2s_set_rate_2
   \   00000050   0xF5B4 0x4FFA      CMP      R4,#+32000
   \   00000054   0xD003             BEQ.N    ??_i2s_set_rate_2
   \   00000056   0xF64B 0x3080      MOVW     R0,#+48000
   \   0000005A   0x4284             CMP      R4,R0
   \   0000005C   0xD101             BNE.N    ??_i2s_set_rate_3
     69                  _set_clock_122800();
   \                     ??_i2s_set_rate_2:
   \   0000005E   0x.... 0x....      BL       _set_clock_122800
     70          
     71              switch(smprate)
   \                     ??_i2s_set_rate_3:
   \   00000062   0xF5B4 0x4FFA      CMP      R4,#+32000
   \   00000066   0xD101             BNE.N    ??_i2s_set_rate_4
     72              {
     73                  case 32000: div=3;  break; // 12.288M/(32K*48) = 8, 8 = (DIV+1)*2, DIV = 3
   \   00000068   0x2003             MOVS     R0,#+3
   \   0000006A   0x0005             MOVS     R5,R0
     74              }   
     75          
     76              I2S0_TCR2 = div;
   \                     ??_i2s_set_rate_4:
   \   0000006C   0x....             LDR.N    R0,??DataTable5_4  ;; 0x4002f008
   \   0000006E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000070   0x6005             STR      R5,[R0, #+0]
     77          }
   \   00000072   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     78          

   \                                 In section .text, align 2, keep-with-next
     79          static void _i2s_io_init(void)
     80          {
     81              #if (BOARD == BOARD_K60) || (BOARD == BOARD_K50)
     82              PORTE_PCR6  &= PORT_PCR_MUX_MASK;
   \                     _i2s_io_init:
   \   00000000   0x....             LDR.N    R0,??DataTable5_14  ;; 0x4004d018
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   00000008   0x....             LDR.N    R1,??DataTable5_14  ;; 0x4004d018
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     83              PORTE_PCR7  &= PORT_PCR_MUX_MASK;
   \   0000000C   0x....             LDR.N    R0,??DataTable5_15  ;; 0x4004d01c
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   00000014   0x....             LDR.N    R1,??DataTable5_15  ;; 0x4004d01c
   \   00000016   0x6008             STR      R0,[R1, #+0]
     84              PORTE_PCR10 &= PORT_PCR_MUX_MASK;
   \   00000018   0x....             LDR.N    R0,??DataTable5_16  ;; 0x4004d028
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   00000020   0x....             LDR.N    R1,??DataTable5_16  ;; 0x4004d028
   \   00000022   0x6008             STR      R0,[R1, #+0]
     85              PORTE_PCR11 &= PORT_PCR_MUX_MASK;
   \   00000024   0x....             LDR.N    R0,??DataTable5_17  ;; 0x4004d02c
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   0000002C   0x....             LDR.N    R1,??DataTable5_17  ;; 0x4004d02c
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     86              PORTE_PCR12 &= PORT_PCR_MUX_MASK;
   \   00000030   0x....             LDR.N    R0,??DataTable5_18  ;; 0x4004d030
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF410 0x60E0      ANDS     R0,R0,#0x700
   \   00000038   0x....             LDR.N    R1,??DataTable5_18  ;; 0x4004d030
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     87          
     88              PORTE_PCR6  |= PORT_PCR_MUX(0x04);
   \   0000003C   0x....             LDR.N    R0,??DataTable5_14  ;; 0x4004d018
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000044   0x....             LDR.N    R1,??DataTable5_14  ;; 0x4004d018
   \   00000046   0x6008             STR      R0,[R1, #+0]
     89              PORTE_PCR7  |= PORT_PCR_MUX(0x04);
   \   00000048   0x....             LDR.N    R0,??DataTable5_15  ;; 0x4004d01c
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000050   0x....             LDR.N    R1,??DataTable5_15  ;; 0x4004d01c
   \   00000052   0x6008             STR      R0,[R1, #+0]
     90              PORTE_PCR10 |= PORT_PCR_MUX(0x04);
   \   00000054   0x....             LDR.N    R0,??DataTable5_16  ;; 0x4004d028
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   0000005C   0x....             LDR.N    R1,??DataTable5_16  ;; 0x4004d028
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     91              PORTE_PCR11 |= PORT_PCR_MUX(0x04);
   \   00000060   0x....             LDR.N    R0,??DataTable5_17  ;; 0x4004d02c
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000068   0x....             LDR.N    R1,??DataTable5_17  ;; 0x4004d02c
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     92              PORTE_PCR12 |= PORT_PCR_MUX(0x04);
   \   0000006C   0x....             LDR.N    R0,??DataTable5_18  ;; 0x4004d030
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000074   0x....             LDR.N    R1,??DataTable5_18  ;; 0x4004d030
   \   00000076   0x6008             STR      R0,[R1, #+0]
     93              #endif
     94          
     95              #if BOARD == BOARD_K40
     96              PORTA_PCR12 &= PORT_PCR_MUX_MASK;
     97              PORTA_PCR13 &= PORT_PCR_MUX_MASK;
     98              PORTA_PCR14 &= PORT_PCR_MUX_MASK;
     99              PORTA_PCR15 &= PORT_PCR_MUX_MASK;
    100              PORTA_PCR16 &= PORT_PCR_MUX_MASK;
    101              PORTA_PCR5  &= PORT_PCR_MUX_MASK;
    102              PORTA_PCR17 &= PORT_PCR_MUX_MASK;
    103          
    104              PORTA_PCR12 |= PORT_PCR_MUX(0x06); // tx
    105              PORTA_PCR13 |= PORT_PCR_MUX(0x06); // tx fs
    106              PORTA_PCR14 |= PORT_PCR_MUX(0x06); // tx clock
    107              PORTA_PCR15 |= PORT_PCR_MUX(0x06); // rx
    108              PORTA_PCR16 |= PORT_PCR_MUX(0x06); // rx fs
    109              PORTA_PCR5  |= PORT_PCR_MUX(0x06); // rx clock
    110              PORTA_PCR17 |= PORT_PCR_MUX(0x06); // mclk
    111              #endif
    112          
    113              #if BOARD == BOARD_K10
    114              PORTB_PCR18 |= PORT_PCR_MUX(0x06);
    115              PORTB_PCR19 |= PORT_PCR_MUX(0x06);
    116              PORTC_PCR0  |= PORT_PCR_MUX(0x06);
    117              PORTC_PCR8  |= PORT_PCR_MUX(0x06);
    118              PORTC_PCR11 |= PORT_PCR_MUX(0x06);
    119              #endif
    120          }
   \   00000078   0x4770             BX       LR               ;; return
    121          

   \                                 In section .text, align 2, keep-with-next
    122          void hal_i2s_init(void)
    123          {    
   \                     hal_i2s_init:
   \   00000000   0xB580             PUSH     {R7,LR}
    124              _i2s_io_init();
   \   00000002   0x.... 0x....      BL       _i2s_io_init
    125              _i2s_set_rate(32000);
   \   00000006   0xF44F 0x40FA      MOV      R0,#+32000
   \   0000000A   0x.... 0x....      BL       _i2s_set_rate
    126              _i2s_init();
   \   0000000E   0x.... 0x....      BL       _i2s_init
    127          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    128          

   \                                 In section .text, align 2, keep-with-next
    129          void hal_i2s_enable(void)
    130          {
    131              I2S0_TCSR |= 1u<<31;
   \                     hal_i2s_enable:
   \   00000000   0x....             LDR.N    R0,??DataTable5_11  ;; 0x4002f000
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x4000      ORRS     R0,R0,#0x80000000
   \   00000008   0x....             LDR.N    R1,??DataTable5_11  ;; 0x4002f000
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    132          }
   \   0000000C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x4002F104         DC32     0x4002f104

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x0001F07C         DC32     0x1f07c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x4002F004         DC32     0x4002f004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x4002F008         DC32     0x4002f008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x4002F00C         DC32     0x4002f00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x4002F010         DC32     0x4002f010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x0001171B         DC32     0x1171b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x4002F014         DC32     0x4002f014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x17171700         DC32     0x17171700

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x4002F060         DC32     0x4002f060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x4002F000         DC32     0x4002f000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x10000001         DC32     0x10000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x4002F100         DC32     0x4002f100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x4004D018         DC32     0x4004d018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x4004D01C         DC32     0x4004d01c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x4004D028         DC32     0x4004d028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x4004D02C         DC32     0x4004d02c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \   00000000   0x4004D030         DC32     0x4004d030
    133          
    134          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   _i2s_init
       0   _i2s_io_init
      16   _i2s_set_rate
        16   -> _set_clock_112896
        16   -> _set_clock_122800
       0   _set_clock_112896
       0   _set_clock_122800
       0   hal_i2s_enable
       8   hal_i2s_init
         8   -> _i2s_init
         8   -> _i2s_io_init
         8   -> _i2s_set_rate


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      52  _i2s_init
     122  _i2s_io_init
     116  _i2s_set_rate
      34  _set_clock_112896
       8  _set_clock_122800
      14  hal_i2s_enable
      20  hal_i2s_init

 
 442 bytes in section .text
 
 442 bytes of CODE memory

Errors: none
Warnings: none
