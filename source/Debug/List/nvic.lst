###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.50.3.4676/W32 for ARM      15/Jul/2015  14:11:15 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\User\Desktop\freescale\source\demo_i2s\src\hal\ #
#                    nvic.c                                                   #
#    Command line =  C:\Users\User\Desktop\freescale\source\demo_i2s\src\hal\ #
#                    nvic.c -lCN C:\Users\User\Desktop\freescale\source\Debug #
#                    \List\ -o C:\Users\User\Desktop\freescale\source\Debug\O #
#                    bj\ --no_cse --no_unroll --no_inline --no_code_motion    #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --char_is_signed      #
#                    --fpu=None --dlib_config "C:\Program Files\IAR           #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\work\prj\g_demo_k\demo_k\src\include\ -On   #
#    List file    =  C:\Users\User\Desktop\freescale\source\Debug\List\nvic.l #
#                    st                                                       #
#    Object file  =  C:\Users\User\Desktop\freescale\source\Debug\Obj\nvic.o  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\User\Desktop\freescale\source\demo_i2s\src\hal\nvic.c
      1          
      2          #include "..\\include\\global.h"
      3          #include "..\\include\\MKxxx.h"
      4          
      5          
      6          
      7          

   \                                 In section .text, align 4, keep-with-next
      8          void nvic_enable_irq(u8 irq_n)
      9          {
   \                     nvic_enable_irq:
   \   00000000   0xB410             PUSH     {R4}
     10              uint offset;
     11          
     12              offset = irq_n>>5;
   \   00000002   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000004   0x0942             LSRS     R2,R0,#+5
   \   00000006   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000008   0x0011             MOVS     R1,R2
     13          
     14              *(&NVICICPR0 + offset) |= 1<<(irq_n&0x1f);
   \   0000000A   0x4A0C             LDR.N    R2,??nvic_enable_irq_0  ;; 0xe000e280
   \   0000000C   0xF852 0x2021      LDR      R2,[R2, R1, LSL #+2]
   \   00000010   0x2301             MOVS     R3,#+1
   \   00000012   0xF010 0x041F      ANDS     R4,R0,#0x1F
   \   00000016   0x40A3             LSLS     R3,R3,R4
   \   00000018   0x431A             ORRS     R2,R3,R2
   \   0000001A   0x4B08             LDR.N    R3,??nvic_enable_irq_0  ;; 0xe000e280
   \   0000001C   0xF843 0x2021      STR      R2,[R3, R1, LSL #+2]
     15              *(&NVICISER0 + offset) |= 1<<(irq_n&0x1f);
   \   00000020   0x4A07             LDR.N    R2,??nvic_enable_irq_0+0x4  ;; 0xe000e100
   \   00000022   0xF852 0x2021      LDR      R2,[R2, R1, LSL #+2]
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0xF010 0x041F      ANDS     R4,R0,#0x1F
   \   0000002C   0x40A3             LSLS     R3,R3,R4
   \   0000002E   0x431A             ORRS     R2,R3,R2
   \   00000030   0x4B03             LDR.N    R3,??nvic_enable_irq_0+0x4  ;; 0xe000e100
   \   00000032   0xF843 0x2021      STR      R2,[R3, R1, LSL #+2]
     16          }
   \   00000036   0xBC10             POP      {R4}
   \   00000038   0x4770             BX       LR               ;; return
   \   0000003A   0xBF00             Nop      
   \                     ??nvic_enable_irq_0:
   \   0000003C   0xE000E280         DC32     0xe000e280
   \   00000040   0xE000E100         DC32     0xe000e100
     17          
     18          
     19          
     20          
     21          
     22          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   nvic_enable_irq


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      68  nvic_enable_irq

 
 68 bytes in section .text
 
 68 bytes of CODE memory

Errors: none
Warnings: none
